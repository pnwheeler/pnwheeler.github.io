import{s as $e,f as c,a as $,g as u,h as q,c as b,d as s,G as H,j as k,i as l,u as p,l as L,m as P,K as de,p as Pe,S as Re,v as De}from"../chunks/scheduler.8d84c197.js";import{S as be,i as ye,b as O,d as N,m as Q,a as U,t as V,e as W,j as Ge}from"../chunks/index.5e028736.js";import{G as Ie,R as _e}from"../chunks/Gif.c638eff4.js";import{g as ce,a as ue}from"../chunks/spread.8a54911c.js";import{R as Ee}from"../chunks/RangeSlider.00a7ad4c.js";function Se(h){let a;return{c(){a=L("Blender donut")},l(n){a=P(n,"Blender donut")},m(n,i){l(n,a,i)},d(n){n&&s(a)}}}function je(h){let a;return{c(){a=L("Quick ttk on boss")},l(n){a=P(n,"Quick ttk on boss")},m(n,i){l(n,a,i)},d(n){n&&s(a)}}}function ze(h){let a,n,i,v,g,x,o,M=`Demo gifs: Tutorial Donut and gamer clip from my best 
		run of <a href="https://store.steampowered.com/app/1676130/Deadlink/" target="_blank">deadlink</a>.`,_;return i=new Ie({props:{src:"/media/projects/GifScrubber/blender_donut.mp4",height:"min(240px, 24vh)",radius_type:"combo left",$$slots:{caption:[Se]},$$scope:{ctx:h}}}),g=new Ie({props:{src:"/media/projects/GifScrubber/deadlink.mp4",height:"min(240px, 24vh)",t:"#t=1",autoplay:!1,controlsBg:"#0006",radius_type:"combo right",$$slots:{caption:[je]},$$scope:{ctx:h}}}),{c(){a=c("figure"),n=c("div"),O(i.$$.fragment),v=$(),O(g.$$.fragment),x=$(),o=c("figcaption"),o.innerHTML=M,this.h()},l(m){a=u(m,"FIGURE",{class:!0,role:!0});var f=q(a);n=u(f,"DIV",{class:!0});var y=q(n);N(i.$$.fragment,y),v=b(y),N(g.$$.fragment,y),y.forEach(s),x=b(f),o=u(f,"FIGCAPTION",{class:!0,"data-svelte-h":!0}),H(o)!=="svelte-1s14123"&&(o.innerHTML=M),f.forEach(s),this.h()},h(){k(n,"class","svelte-o0m8eb"),k(o,"class","caption"),k(a,"class","max-w svelte-o0m8eb"),k(a,"role","group")},m(m,f){l(m,a,f),p(a,n),Q(i,n,null),p(n,v),Q(g,n,null),p(a,x),p(a,o),_=!0},p(m,[f]){const y={};f&1&&(y.$$scope={dirty:f,ctx:m}),i.$set(y);const R={};f&1&&(R.$$scope={dirty:f,ctx:m}),g.$set(R)},i(m){_||(U(i.$$.fragment,m),U(g.$$.fragment,m),_=!0)},o(m){V(i.$$.fragment,m),V(g.$$.fragment,m),_=!1},d(m){m&&s(a),W(i),W(g)}}}class Be extends be{constructor(a){super(),ye(this,a,null,ze,$e,{})}}function Ae(h){let a,n,i,v,g,x,o,M,_,m,f,y,R=`Comparing canvas quality at different render scales (simulated DPR=3). From left: no scaling (<em>20px</em>), 1×DPR
		(<em>60px</em>), and 2×DPR (<em>120px</em>).`,C;const E=[{size:20},{percent:h[0]},h[2]];let I={};for(let t=0;t<E.length;t+=1)I=de(I,E[t]);i=new _e({props:I});const S=[{size:60},{percent:h[0]},h[2]];let K={};for(let t=0;t<S.length;t+=1)K=de(K,S[t]);g=new _e({props:K});const G=[{size:120},{percent:h[0]},h[2]];let j={};for(let t=0;t<G.length;t+=1)j=de(j,G[t]);o=new _e({props:j});const z=[h[1]];function w(t){h[3](t)}let B={};for(let t=0;t<z.length;t+=1)B=de(B,z[t]);return h[0]!==void 0&&(B.value=h[0]),_=new Ee({props:B}),Pe.push(()=>Ge(_,"value",w)),{c(){a=c("figure"),n=c("div"),O(i.$$.fragment),v=$(),O(g.$$.fragment),x=$(),O(o.$$.fragment),M=$(),O(_.$$.fragment),f=$(),y=c("figcaption"),y.innerHTML=R,this.h()},l(t){a=u(t,"FIGURE",{class:!0,role:!0});var d=q(a);n=u(d,"DIV",{class:!0});var T=q(n);N(i.$$.fragment,T),v=b(T),N(g.$$.fragment,T),x=b(T),N(o.$$.fragment,T),T.forEach(s),M=b(d),N(_.$$.fragment,d),f=b(d),y=u(d,"FIGCAPTION",{class:!0,"data-svelte-h":!0}),H(y)!=="svelte-49f377"&&(y.innerHTML=R),d.forEach(s),this.h()},h(){k(n,"class","radius examples svelte-15ez60t"),k(y,"class","caption"),k(a,"class","max-w svelte-15ez60t"),k(a,"role","group")},m(t,d){l(t,a,d),p(a,n),Q(i,n,null),p(n,v),Q(g,n,null),p(n,x),Q(o,n,null),p(a,M),Q(_,a,null),p(a,f),p(a,y),C=!0},p(t,[d]){const T=d&5?ce(E,[E[0],d&1&&{percent:t[0]},d&4&&ue(t[2])]):{};i.$set(T);const A=d&5?ce(S,[S[0],d&1&&{percent:t[0]},d&4&&ue(t[2])]):{};g.$set(A);const se=d&5?ce(G,[G[0],d&1&&{percent:t[0]},d&4&&ue(t[2])]):{};o.$set(se);const ae=d&2?ce(z,[ue(t[1])]):{};!m&&d&1&&(m=!0,ae.value=t[0],Re(()=>m=!1)),_.$set(ae)},i(t){C||(U(i.$$.fragment,t),U(g.$$.fragment,t),U(o.$$.fragment,t),U(_.$$.fragment,t),C=!0)},o(t){V(i.$$.fragment,t),V(g.$$.fragment,t),V(o.$$.fragment,t),V(_.$$.fragment,t),C=!1},d(t){t&&s(a),W(i),W(g),W(o),W(_)}}}function Fe(h,a,n){const i={thumbColor:"var(--slate-blue-dim)",showNumber:!0,numSize:"var(--step--1)",step:"1",numColor:"var(--color-caption)"};let v=25;const g={use_decimal:!1,use_DPR:!1,fillSpace:!0,seeking:!0,bgColor:"none"};function x(o){v=o,n(0,v)}return[v,i,g,x]}class qe extends be{constructor(a){super(),ye(this,a,Fe,Ae,$e,{})}}function Oe(h){let a,n="<span>Gif Scrubber</span>",i,v,g=`An inline video player with custom controls. I made this component in the process of updating my website to have a
	more flexible way to handle media and avoid the headache of trying to optimize <em>real</em> gifs.`,x,o,M,_,m,f,y=`To keep it minimal and mobile-friendly, I stuck an always-visible playback <code data-type="html">button</code> on the
	corner and use a couple of pointer events to manage timeline scrubbing.`,R,C,E,I,S,K,G,j,z,w,B,t,d="svg",T,A,se="many",ae,J,we="canvas",ge,X,he,ve,ne,Y,re,Z,ke=`I scaled it by another factor of 2 (<em>i.e.</em> the rightmost canvas) to make it <em>super</em> crisp—<em>super</em>
	unnecessary! But it <em>was</em> slightly sharper, and didn&#39;t have a noticeable impact on performance, so I went with it.`,le,ie,oe,ee,xe=`<strong>TLDR</strong>: Trying to guarantee compatibility on a <code>src</code> (made with any codec newer than h.264) is hard. Browser + hardware support fragmentation. I
	ended up writing a Python script to backfill each <code data-type="ext">.mp4</code> with
	<code data-type="ext">.webm</code> before building. My magic ffmpeg command looks like this:`,pe,F,Ce=`<code class="svelte-4db74d"><span>ffmpeg</span> -i [input] -movflags +faststart -pix_fmt yuv420p -c:v libvpx-vp9 -threads 8 -crf 40 -g 32 -deadline good -an [output]</code>
`,me,te,Te=`Getting it to work consistently was a lot more involved (<em>and hacky</em>) than I hoped, but I&#39;m pretty happy with how it
	turned out.`,fe;return o=new Be({}),Y=new qe({}),{c(){a=c("h1"),a.innerHTML=n,i=$(),v=c("p"),v.innerHTML=g,x=$(),O(o.$$.fragment),M=$(),_=c("hr"),m=$(),f=c("p"),f.innerHTML=y,R=$(),C=c("p"),E=L(`It's set up so moving a distance across the container's width is proportional to seeking that fraction of the video's\r
	duration. Huge s/o to Red Blob Games for their in-depth article about `),I=c("a"),S=L("draggable objects"),K=L(", extremely helpful!"),G=$(),j=c("hr"),z=$(),w=c("p"),B=L("I originally made the progress indicator with an "),t=c("code"),t.textContent=d,T=L(" but, after "),A=c("em"),A.textContent=se,ae=L(` failed\r
	attempts at fixing transform jank, scrapped it for a\r
	`),J=c("code"),J.textContent=we,ge=L(`. Without any adjustments, it'll look blocky and pixelated on high-dpi screens.\r
	That's fixed by multiplying the base resolution by the `),X=c("a"),he=L("device pixel ratio (DPR)"),ve=L(` and\r
	normalizing the area with CSS:`),ne=$(),O(Y.$$.fragment),re=$(),Z=c("p"),Z.innerHTML=ke,le=$(),ie=c("hr"),oe=$(),ee=c("p"),ee.innerHTML=xe,pe=$(),F=c("pre"),F.innerHTML=Ce,me=$(),te=c("p"),te.innerHTML=Te,this.h()},l(e){a=u(e,"H1",{"data-svelte-h":!0}),H(a)!=="svelte-16mbdpp"&&(a.innerHTML=n),i=b(e),v=u(e,"P",{"data-svelte-h":!0}),H(v)!=="svelte-1gwt0bf"&&(v.innerHTML=g),x=b(e),N(o.$$.fragment,e),M=b(e),_=u(e,"HR",{}),m=b(e),f=u(e,"P",{"data-svelte-h":!0}),H(f)!=="svelte-3bkcyd"&&(f.innerHTML=y),R=b(e),C=u(e,"P",{});var r=q(C);E=P(r,`It's set up so moving a distance across the container's width is proportional to seeking that fraction of the video's\r
	duration. Huge s/o to Red Blob Games for their in-depth article about `),I=u(r,"A",{href:!0,target:!0});var He=q(I);S=P(He,"draggable objects"),He.forEach(s),K=P(r,", extremely helpful!"),r.forEach(s),G=b(e),j=u(e,"HR",{}),z=b(e),w=u(e,"P",{});var D=q(w);B=P(D,"I originally made the progress indicator with an "),t=u(D,"CODE",{"data-type":!0,"data-svelte-h":!0}),H(t)!=="svelte-mflvan"&&(t.textContent=d),T=P(D," but, after "),A=u(D,"EM",{"data-svelte-h":!0}),H(A)!=="svelte-q8yrbd"&&(A.textContent=se),ae=P(D,` failed\r
	attempts at fixing transform jank, scrapped it for a\r
	`),J=u(D,"CODE",{"data-type":!0,"data-svelte-h":!0}),H(J)!=="svelte-jhma2z"&&(J.textContent=we),ge=P(D,`. Without any adjustments, it'll look blocky and pixelated on high-dpi screens.\r
	That's fixed by multiplying the base resolution by the `),X=u(D,"A",{href:!0,target:!0});var Me=q(X);he=P(Me,"device pixel ratio (DPR)"),Me.forEach(s),ve=P(D,` and\r
	normalizing the area with CSS:`),D.forEach(s),ne=b(e),N(Y.$$.fragment,e),re=b(e),Z=u(e,"P",{"data-svelte-h":!0}),H(Z)!=="svelte-17v1voq"&&(Z.innerHTML=ke),le=b(e),ie=u(e,"HR",{}),oe=b(e),ee=u(e,"P",{"data-svelte-h":!0}),H(ee)!=="svelte-bhg75i"&&(ee.innerHTML=xe),pe=b(e),F=u(e,"PRE",{class:!0,"data-svelte-h":!0}),H(F)!=="svelte-al91pe"&&(F.innerHTML=Ce),me=b(e),te=u(e,"P",{"data-svelte-h":!0}),H(te)!=="svelte-il4spp"&&(te.innerHTML=Te),this.h()},h(){k(I,"href",Ne),k(I,"target",Le),k(t,"data-type","html"),k(J,"data-type","html"),k(X,"href",Qe),k(X,"target",Le),k(F,"class","codeblock overflow-scrollbar svelte-4db74d")},m(e,r){l(e,a,r),l(e,i,r),l(e,v,r),l(e,x,r),Q(o,e,r),l(e,M,r),l(e,_,r),l(e,m,r),l(e,f,r),l(e,R,r),l(e,C,r),p(C,E),p(C,I),p(I,S),p(C,K),l(e,G,r),l(e,j,r),l(e,z,r),l(e,w,r),p(w,B),p(w,t),p(w,T),p(w,A),p(w,ae),p(w,J),p(w,ge),p(w,X),p(X,he),p(w,ve),l(e,ne,r),Q(Y,e,r),l(e,re,r),l(e,Z,r),l(e,le,r),l(e,ie,r),l(e,oe,r),l(e,ee,r),l(e,pe,r),l(e,F,r),l(e,me,r),l(e,te,r),fe=!0},p:De,i(e){fe||(U(o.$$.fragment,e),U(Y.$$.fragment,e),fe=!0)},o(e){V(o.$$.fragment,e),V(Y.$$.fragment,e),fe=!1},d(e){e&&(s(a),s(i),s(v),s(x),s(M),s(_),s(m),s(f),s(R),s(C),s(G),s(j),s(z),s(w),s(ne),s(re),s(Z),s(le),s(ie),s(oe),s(ee),s(pe),s(F),s(me),s(te)),W(o,e),W(Y,e)}}}const Le="_blank",Ne="https://www.redblobgames.com/making-of/draggable/",Qe="https://cloudinary.com/glossary/device-pixel-ratio";class Xe extends be{constructor(a){super(),ye(this,a,null,Oe,$e,{})}}export{Xe as component};
