import{s as re,I as Y,f as d,a as b,g as v,h as B,c as k,d as a,G as E,j as I,i as c,u as C,l as L,m as R,k as Ce,v as ze,p as Ee,S as Le,o as Re}from"../chunks/scheduler.1a83071e.js";import{S as ae,i as ne,b as P,d as S,m as F,a as A,t as V,e as D,j as Pe}from"../chunks/index.98f22588.js";import{g as W,a as O}from"../chunks/spread.8a54911c.js";import{I as se}from"../chunks/Img.460888a1.js";import{G as xe}from"../chunks/Gif.c67f3549.js";/* empty css                                                            */import{R as Se}from"../chunks/RangeSlider.f858772b.js";function Fe(f){let e;return{c(){e=L("Rasterized teapot")},l(s){e=R(s,"Rasterized teapot")},m(s,r){c(s,e,r)},d(s){s&&a(e)}}}function Ae(f){let e;return{c(){e=L("Ray traced teapot")},l(s){e=R(s,"Ray traced teapot")},m(s,r){c(s,e,r)},d(s){s&&a(e)}}}function Ve(f){let e,s,r,p,i,w,u,H="Utah teapot scene as exported by the different renderers.",$;const M=[f[0]];let y={$$slots:{caption:[Fe]},$$scope:{ctx:f}};for(let m=0;m<M.length;m+=1)y=Y(y,M[m]);r=new se({props:y});const _=[f[1]];let T={$$slots:{caption:[Ae]},$$scope:{ctx:f}};for(let m=0;m<_.length;m+=1)T=Y(T,_[m]);return i=new se({props:T}),{c(){e=d("figure"),s=d("div"),P(r.$$.fragment),p=b(),P(i.$$.fragment),w=b(),u=d("figcaption"),u.textContent=H,this.h()},l(m){e=v(m,"FIGURE",{class:!0,role:!0});var h=B(e);s=v(h,"DIV",{class:!0});var j=B(s);S(r.$$.fragment,j),p=k(j),S(i.$$.fragment,j),j.forEach(a),w=k(h),u=v(h,"FIGCAPTION",{class:!0,"data-svelte-h":!0}),E(u)!=="svelte-f7xzcn"&&(u.textContent=H),h.forEach(a),this.h()},h(){I(s,"class","radius svelte-wlqmes"),I(u,"class","caption"),I(e,"class","max-w"),I(e,"role","group")},m(m,h){c(m,e,h),C(e,s),F(r,s,null),C(s,p),F(i,s,null),C(e,w),C(e,u),$=!0},p(m,[h]){const j=h&1?W(M,[O(m[0])]):{};h&4&&(j.$$scope={dirty:h,ctx:m}),r.$set(j);const z=h&2?W(_,[O(m[1])]):{};h&4&&(z.$$scope={dirty:h,ctx:m}),i.$set(z)},i(m){$||(A(r.$$.fragment,m),A(i.$$.fragment,m),$=!0)},o(m){V(r.$$.fragment,m),V(i.$$.fragment,m),$=!1},d(m){m&&a(e),D(r),D(i)}}}function De(f){return[{src:"/media/projects/MiscGraphics/static_renders/teapot_raster.avif",alt:"rasterized teapot",to:{x:0,y:5,s:1.2},from:{x:0,y:5,s:1.15}},{src:"/media/projects/MiscGraphics/static_renders/teapot_ray.avif",alt:"ray traced teapot",to:{x:0,y:5,s:1.2},from:{x:0,y:5,s:1.15}}]}class Be extends ae{constructor(e){super(),ne(this,e,De,Ve,re,{})}}function Oe(f){let e,s,r,p,i,w,u,H,$,M="Wikimedia Commons";return{c(){e=L(`Visualizing output: red seam marked for removal.\r
				`),s=d("span"),r=d("a"),p=L("Photo"),i=L(` by\r
				DAVID ILIFF, `),w=d("a"),u=L("CC BY 2.5"),H=L(`, via\r
				`),$=d("em"),$.textContent=M,this.h()},l(y){e=R(y,`Visualizing output: red seam marked for removal.\r
				`),s=v(y,"SPAN",{class:!0});var _=B(s);r=v(_,"A",{href:!0,target:!0});var T=B(r);p=R(T,"Photo"),T.forEach(a),i=R(_,` by\r
				DAVID ILIFF, `),w=v(_,"A",{href:!0,target:!0});var m=B(w);u=R(m,"CC BY 2.5"),m.forEach(a),H=R(_,`, via\r
				`),$=v(_,"EM",{"data-svelte-h":!0}),E($)!=="svelte-18tcd74"&&($.textContent=M),_.forEach(a),this.h()},h(){I(r,"href",Ne),I(r,"target",He),I(w,"href","https://creativecommons.org/licenses/by/2.5"),I(w,"target",He),I(s,"class","source svelte-1ah7gal")},m(y,_){c(y,e,_),c(y,s,_),C(s,r),C(r,p),C(s,i),C(s,w),C(w,u),C(s,H),C(s,$)},p:ze,d(y){y&&(a(e),a(s))}}}function qe(f){let e,s,r;return s=new xe({props:{src:"/media/projects/MiscGraphics/seam_carve/panorama.mp4",radius_type:"default",cap_center:!1,$$slots:{caption:[Oe]},$$scope:{ctx:f}}}),{c(){e=d("div"),P(s.$$.fragment),this.h()},l(p){e=v(p,"DIV",{class:!0,style:!0});var i=B(e);S(s.$$.fragment,i),i.forEach(a),this.h()},h(){I(e,"class","max-w"),Ce(e,"--w","500px")},m(p,i){c(p,e,i),F(s,e,null),r=!0},p(p,[i]){const w={};i&8&&(w.$$scope={dirty:i,ctx:p}),s.$set(w)},i(p){r||(A(s.$$.fragment,p),r=!0)},o(p){V(s.$$.fragment,p),r=!1},d(p){p&&a(e),D(s)}}}const Ne="https://commons.wikimedia.org/wiki/File:Melbourne_Docklands_-_Yarras_Edge_-_marina_panorama.jpg",He="_blank";function Ue(f){return[]}class Ye extends ae{constructor(e){super(),ne(this,e,Ue,qe,re,{})}}function We(f){let e;return{c(){e=L("original image")},l(s){e=R(s,"original image")},m(s,r){c(s,e,r)},d(s){s&&a(e)}}}function Je(f){let e;return{c(){e=L("horizontal sort")},l(s){e=R(s,"horizontal sort")},m(s,r){c(s,e,r)},d(s){s&&a(e)}}}function Ke(f){let e;return{c(){e=L("vertical sort")},l(s){e=R(s,"vertical sort")},m(s,r){c(s,e,r)},d(s){s&&a(e)}}}function Qe(f){let e,s,r,p,i,w,u,H,$,M="Pixel sorting a picture I took of some frosty mossâ€”cool way to reinterpret depth.",y;const _=[f[0],f[1]];let T={$$slots:{caption:[We]},$$scope:{ctx:f}};for(let l=0;l<_.length;l+=1)T=Y(T,_[l]);r=new se({props:T});const m=[f[0],f[2]];let h={$$slots:{caption:[Je]},$$scope:{ctx:f}};for(let l=0;l<m.length;l+=1)h=Y(h,m[l]);i=new se({props:h});const j=[f[0],f[3]];let z={$$slots:{caption:[Ke]},$$scope:{ctx:f}};for(let l=0;l<j.length;l+=1)z=Y(z,j[l]);return u=new se({props:z}),{c(){e=d("figure"),s=d("div"),P(r.$$.fragment),p=b(),P(i.$$.fragment),w=b(),P(u.$$.fragment),H=b(),$=d("figcaption"),$.textContent=M,this.h()},l(l){e=v(l,"FIGURE",{class:!0,role:!0});var g=B(e);s=v(g,"DIV",{class:!0});var n=B(s);S(r.$$.fragment,n),p=k(n),S(i.$$.fragment,n),w=k(n),S(u.$$.fragment,n),n.forEach(a),H=k(g),$=v(g,"FIGCAPTION",{class:!0,"data-svelte-h":!0}),E($)!=="svelte-12m4a4r"&&($.textContent=M),g.forEach(a),this.h()},h(){I(s,"class","radius"),I($,"class","caption"),I(e,"class","max-w  svelte-x1uijb"),I(e,"role","group")},m(l,g){c(l,e,g),C(e,s),F(r,s,null),C(s,p),F(i,s,null),C(s,w),F(u,s,null),C(e,H),C(e,$),y=!0},p(l,[g]){const n=g&3?W(_,[g&1&&O(l[0]),g&2&&O(l[1])]):{};g&16&&(n.$$scope={dirty:g,ctx:l}),r.$set(n);const x=g&5?W(m,[g&1&&O(l[0]),g&4&&O(l[2])]):{};g&16&&(x.$$scope={dirty:g,ctx:l}),i.$set(x);const G=g&9?W(j,[g&1&&O(l[0]),g&8&&O(l[3])]):{};g&16&&(G.$$scope={dirty:g,ctx:l}),u.$set(G)},i(l){y||(A(r.$$.fragment,l),A(i.$$.fragment,l),A(u.$$.fragment,l),y=!0)},o(l){V(r.$$.fragment,l),V(i.$$.fragment,l),V(u.$$.fragment,l),y=!1},d(l){l&&a(e),D(r),D(i),D(u)}}}function Xe(f){return[{from:{x:0,y:0,s:2.4},to:{x:0,y:0,s:2.6}},{src:"/media/projects/MiscGraphics/pixel_sort/moss.avif",alt:"Original picture of moss"},{src:"/media/projects/MiscGraphics/pixel_sort/moss_h.avif",alt:"After horizontal pixel sort"},{src:"/media/projects/MiscGraphics/pixel_sort/moss_v.avif",alt:"After vertical pixel sort"}]}class Ze extends ae{constructor(e){super(),ne(this,e,Xe,Qe,re,{})}}function et(f){let e,s,r,p,i,w,u,H,$,M,y='<span id="before">Before</span> and <span id="after" class="svelte-jjl9cv">after</span> running the script',_;const T=[f[1],{src:Te}];let m={};for(let n=0;n<T.length;n+=1)m=Y(m,T[n]);r=new xe({props:m});const h=[f[1],{src:Ge},{outline_off:!0}];let j={};for(let n=0;n<h.length;n+=1)j=Y(j,h[n]);i=new xe({props:j});const z=[f[2]];function l(n){f[3](n)}let g={};for(let n=0;n<z.length;n+=1)g=Y(g,z[n]);return f[0]!==void 0&&(g.value=f[0]),u=new Se({props:g}),Ee.push(()=>Pe(u,"value",l)),{c(){e=d("figure"),s=d("div"),P(r.$$.fragment),p=b(),P(i.$$.fragment),w=b(),P(u.$$.fragment),$=b(),M=d("figcaption"),M.innerHTML=y,this.h()},l(n){e=v(n,"FIGURE",{class:!0,style:!0});var x=B(e);s=v(x,"DIV",{class:!0});var G=B(s);S(r.$$.fragment,G),p=k(G),S(i.$$.fragment,G),G.forEach(a),w=k(x),S(u.$$.fragment,x),$=k(x),M=v(x,"FIGCAPTION",{class:!0,"data-svelte-h":!0}),E(M)!=="svelte-racunt"&&(M.innerHTML=y),x.forEach(a),this.h()},h(){I(s,"class","before-after svelte-jjl9cv"),I(M,"class","caption svelte-jjl9cv"),I(e,"class","demo max-w svelte-jjl9cv"),Ce(e,"--percent",f[0]+"%")},m(n,x){c(n,e,x),C(e,s),F(r,s,null),C(s,p),F(i,s,null),C(e,w),F(u,e,null),C(e,$),C(e,M),_=!0},p(n,[x]){const G=x&2?W(T,[x&2&&O(n[1]),x&0&&{src:Te}]):{};r.$set(G);const ie=x&2?W(h,[x&2&&O(n[1]),x&0&&{src:Ge},h[2]]):{};i.$set(ie);const J=x&4?W(z,[O(n[2])]):{};!H&&x&1&&(H=!0,J.value=n[0],Le(()=>H=!1)),u.$set(J),(!_||x&1)&&Ce(e,"--percent",n[0]+"%")},i(n){_||(A(r.$$.fragment,n),A(i.$$.fragment,n),A(u.$$.fragment,n),_=!0)},o(n){V(r.$$.fragment,n),V(i.$$.fragment,n),V(u.$$.fragment,n),_=!1},d(n){n&&a(e),D(r),D(i),D(u)}}}const Te="/media/projects/ImageStabilzation/church_after.mp4",Ge="/media/projects/ImageStabilzation/church_before.mp4";function tt(f,e,s){const r={controls:!1,pad:.5,background:"var(--grey-0)",inset_shadow:!0},p={thumbColor:"var(--slate-blue-dim)",trackPre:"#5d5d5d",trackPost:"#5d5d5d"};let i=50;function w(u){i=u,s(0,i)}return[i,r,p,w]}class st extends ae{constructor(e){super(),ne(this,e,tt,et,re,{})}}function rt(f){let e,s="<span>Misc Graphics</span>",r,p,i=`A couple of graphics related projects I wasn't sure how to organize but wanted to include. If nothing else, they give\r
	me a good excuse to add more pictures/demos :)`,w,u,H,$,M='<span class="svelte-5hioc4">Software Renderers</span>',y,_,T=`Ray tracer and rasterizer made for an <em>Intro to Graphics</em> course. They share a parser for reading
	<em>NFF</em> scene descriptions and exporting to ppm, and a bit of logic for matrix ops/geometry processing. They&#39;re
	poorly optimized and <em>very</em> minimal, but I still think they&#39;re neat. C++, Eigen.h`,m,h,j,z,l,g,n='<span class="svelte-5hioc4">Image stabilization</span>',x,G,ie=`I wrote this script to try automating the alignment of pictures I took without a tripod. The idea was to go through
	the sequence and, with respect to a set of feature coordinates (identified using <em>ORB descriptors</em> and a
	<em>BF matcher</em>), apply transforms to minimize the distance between them. OpenCV, Python`,J,K,le,oe,ce,N,be='<span class="svelte-5hioc4">Seam Carving</span>',fe,q,de,Q,ve,we,te,ke="Intro to Graphics",Ie,me,X,pe,ue,ge,U,ye='<span class="svelte-5hioc4">Pixel sorting</span>',$e,Z,Me=`A little cli program I made to play around with an effect that sorts pixels (by color) along segmented intervals. I\r
	added a couple of parameters to modify threshold behavior and change the sort direction. C++, CImg.h`,_e,ee,he;return h=new Be({}),K=new st({}),X=new Ye({}),ee=new Ze({}),{c(){e=d("h1"),e.innerHTML=s,r=b(),p=d("p"),p.textContent=i,w=b(),u=d("hr"),H=b(),$=d("h2"),$.innerHTML=M,y=b(),_=d("p"),_.innerHTML=T,m=b(),P(h.$$.fragment),j=b(),z=d("hr"),l=b(),g=d("h2"),g.innerHTML=n,x=b(),G=d("p"),G.innerHTML=ie,J=b(),P(K.$$.fragment),le=b(),oe=d("hr"),ce=b(),N=d("h2"),N.innerHTML=be,fe=b(),q=d("p"),de=L("Implementation of the content-aware "),Q=d("a"),ve=L("seam carving"),we=L(` algorithm (also made for the\r
	`),te=d("em"),te.textContent=ke,Ie=L(` course). I preprocessed the images with a LoG filter and converted RGBâ†’relative luminance as\r
	the heuristic for pixel energy. I also went back and added a masking tool for better control over the output. C++, CImg.h`),me=b(),P(X.$$.fragment),pe=b(),ue=d("hr"),ge=b(),U=d("h2"),U.innerHTML=ye,$e=b(),Z=d("p"),Z.textContent=Me,_e=b(),P(ee.$$.fragment),this.h()},l(t){e=v(t,"H1",{"data-svelte-h":!0}),E(e)!=="svelte-2kftm8"&&(e.innerHTML=s),r=k(t),p=v(t,"P",{"data-svelte-h":!0}),E(p)!=="svelte-rr0tn8"&&(p.textContent=i),w=k(t),u=v(t,"HR",{}),H=k(t),$=v(t,"H2",{id:!0,class:!0,"data-svelte-h":!0}),E($)!=="svelte-hxtweq"&&($.innerHTML=M),y=k(t),_=v(t,"P",{"data-svelte-h":!0}),E(_)!=="svelte-1gkjx6u"&&(_.innerHTML=T),m=k(t),S(h.$$.fragment,t),j=k(t),z=v(t,"HR",{}),l=k(t),g=v(t,"H2",{id:!0,class:!0,"data-svelte-h":!0}),E(g)!=="svelte-ucva6w"&&(g.innerHTML=n),x=k(t),G=v(t,"P",{"data-svelte-h":!0}),E(G)!=="svelte-less1u"&&(G.innerHTML=ie),J=k(t),S(K.$$.fragment,t),le=k(t),oe=v(t,"HR",{}),ce=k(t),N=v(t,"H2",{id:!0,class:!0,"data-svelte-h":!0}),E(N)!=="svelte-18yucza"&&(N.innerHTML=be),fe=k(t),q=v(t,"P",{});var o=B(q);de=R(o,"Implementation of the content-aware "),Q=v(o,"A",{href:!0,target:!0});var je=B(Q);ve=R(je,"seam carving"),je.forEach(a),we=R(o,` algorithm (also made for the\r
	`),te=v(o,"EM",{"data-svelte-h":!0}),E(te)!=="svelte-15k3n4a"&&(te.textContent=ke),Ie=R(o,` course). I preprocessed the images with a LoG filter and converted RGBâ†’relative luminance as\r
	the heuristic for pixel energy. I also went back and added a masking tool for better control over the output. C++, CImg.h`),o.forEach(a),me=k(t),S(X.$$.fragment,t),pe=k(t),ue=v(t,"HR",{}),ge=k(t),U=v(t,"H2",{id:!0,class:!0,"data-svelte-h":!0}),E(U)!=="svelte-1cqj0sg"&&(U.innerHTML=ye),$e=k(t),Z=v(t,"P",{"data-svelte-h":!0}),E(Z)!=="svelte-1ateljp"&&(Z.textContent=Me),_e=k(t),S(ee.$$.fragment,t),this.h()},h(){I($,"id","software-renderers"),I($,"class","svelte-5hioc4"),I(g,"id","image-stabilization"),I(g,"class","svelte-5hioc4"),I(N,"id","seam-carving"),I(N,"class","svelte-5hioc4"),I(Q,"href",at),I(Q,"target",nt),I(U,"id","pixel-sorting"),I(U,"class","svelte-5hioc4")},m(t,o){c(t,e,o),c(t,r,o),c(t,p,o),c(t,w,o),c(t,u,o),c(t,H,o),c(t,$,o),c(t,y,o),c(t,_,o),c(t,m,o),F(h,t,o),c(t,j,o),c(t,z,o),c(t,l,o),c(t,g,o),c(t,x,o),c(t,G,o),c(t,J,o),F(K,t,o),c(t,le,o),c(t,oe,o),c(t,ce,o),c(t,N,o),c(t,fe,o),c(t,q,o),C(q,de),C(q,Q),C(Q,ve),C(q,we),C(q,te),C(q,Ie),c(t,me,o),F(X,t,o),c(t,pe,o),c(t,ue,o),c(t,ge,o),c(t,U,o),c(t,$e,o),c(t,Z,o),c(t,_e,o),F(ee,t,o),he=!0},p:ze,i(t){he||(A(h.$$.fragment,t),A(K.$$.fragment,t),A(X.$$.fragment,t),A(ee.$$.fragment,t),he=!0)},o(t){V(h.$$.fragment,t),V(K.$$.fragment,t),V(X.$$.fragment,t),V(ee.$$.fragment,t),he=!1},d(t){t&&(a(e),a(r),a(p),a(w),a(u),a(H),a($),a(y),a(_),a(m),a(j),a(z),a(l),a(g),a(x),a(G),a(J),a(le),a(oe),a(ce),a(N),a(fe),a(q),a(me),a(pe),a(ue),a(ge),a(U),a($e),a(Z),a(_e)),D(h,t),D(K,t),D(X,t),D(ee,t)}}}const at="https://en.wikipedia.org/wiki/Seam_carving",nt="_blank";function it(f){return Re(()=>{if(typeof window<"u"&&window.location.hash){const e=document.getElementById(window.location.hash.substring(1));e&&window.setTimeout(()=>e.scrollIntoView(),100)}}),[]}class gt extends ae{constructor(e){super(),ne(this,e,it,rt,re,{})}}export{gt as component};
