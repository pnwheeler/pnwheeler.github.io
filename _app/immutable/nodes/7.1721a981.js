import{s as $e,f as c,a as $,g as d,h as q,c as b,d as s,G as P,j as C,i as l,u as p,l as R,m as M,K as me,p as Me,S as De,v as Ee}from"../chunks/scheduler.8d84c197.js";import{S as be,i as we,b as N,d as O,m as Q,a as U,t as V,e as K,j as Ge}from"../chunks/index.5e028736.js";import{G as Ie,R as _e}from"../chunks/Gif.fca02dd7.js";import{g as ce,a as de}from"../chunks/spread.8a54911c.js";import{R as Le}from"../chunks/RangeSlider.00a7ad4c.js";function Se(h){let a;return{c(){a=R("Blender donut")},l(n){a=M(n,"Blender donut")},m(n,i){l(n,a,i)},d(n){n&&s(a)}}}function je(h){let a;return{c(){a=R("Quick ttk on boss")},l(n){a=M(n,"Quick ttk on boss")},m(n,i){l(n,a,i)},d(n){n&&s(a)}}}function ze(h){let a,n,i,v,g,x,o,T=`Demo gifs: Tutorial Donut and gamer clip from my best 
		run of <a href="https://store.steampowered.com/app/1676130/Deadlink/" target="_blank">deadlink</a>.`,_;return i=new Ie({props:{src:"/media/projects/GifScrubber/blender_donut.mp4",height:"min(240px, 24vh)",autoplay:!1,radius_type:"combo left",$$slots:{caption:[Se]},$$scope:{ctx:h}}}),g=new Ie({props:{src:"/media/projects/GifScrubber/deadlink.mp4",height:"min(240px, 24vh)",controlsBg:"#0006",radius_type:"combo right",$$slots:{caption:[je]},$$scope:{ctx:h}}}),{c(){a=c("figure"),n=c("div"),N(i.$$.fragment),v=$(),N(g.$$.fragment),x=$(),o=c("figcaption"),o.innerHTML=T,this.h()},l(f){a=d(f,"FIGURE",{class:!0,role:!0});var u=q(a);n=d(u,"DIV",{class:!0});var w=q(n);O(i.$$.fragment,w),v=b(w),O(g.$$.fragment,w),w.forEach(s),x=b(u),o=d(u,"FIGCAPTION",{class:!0,"data-svelte-h":!0}),P(o)!=="svelte-1s14123"&&(o.innerHTML=T),u.forEach(s),this.h()},h(){C(n,"class","svelte-o0m8eb"),C(o,"class","caption"),C(a,"class","max-w svelte-o0m8eb"),C(a,"role","group")},m(f,u){l(f,a,u),p(a,n),Q(i,n,null),p(n,v),Q(g,n,null),p(a,x),p(a,o),_=!0},p(f,[u]){const w={};u&1&&(w.$$scope={dirty:u,ctx:f}),i.$set(w);const D={};u&1&&(D.$$scope={dirty:u,ctx:f}),g.$set(D)},i(f){_||(U(i.$$.fragment,f),U(g.$$.fragment,f),_=!0)},o(f){V(i.$$.fragment,f),V(g.$$.fragment,f),_=!1},d(f){f&&s(a),K(i),K(g)}}}class Ae extends be{constructor(a){super(),we(this,a,null,ze,$e,{})}}function Be(h){let a,n,i,v,g,x,o,T,_,f,u,w,D=`Comparing canvas quality at different render scales (simulated DPR=3). From left: no scaling (20px), 1×DPR\r
		(60px), and 2×DPR (120px).`,k;const S=[{size:20},{percent:h[0]},h[2]];let I={};for(let t=0;t<S.length;t+=1)I=me(I,S[t]);i=new _e({props:I});const j=[{size:60},{percent:h[0]},h[2]];let W={};for(let t=0;t<j.length;t+=1)W=me(W,j[t]);g=new _e({props:W});const G=[{size:120},{percent:h[0]},h[2]];let z={};for(let t=0;t<G.length;t+=1)z=me(z,G[t]);o=new _e({props:z});const A=[h[1]];function y(t){h[3](t)}let B={};for(let t=0;t<A.length;t+=1)B=me(B,A[t]);return h[0]!==void 0&&(B.value=h[0]),_=new Le({props:B}),Me.push(()=>Ge(_,"value",y)),{c(){a=c("figure"),n=c("div"),N(i.$$.fragment),v=$(),N(g.$$.fragment),x=$(),N(o.$$.fragment),T=$(),N(_.$$.fragment),u=$(),w=c("figcaption"),w.textContent=D,this.h()},l(t){a=d(t,"FIGURE",{class:!0,role:!0});var m=q(a);n=d(m,"DIV",{class:!0});var H=q(n);O(i.$$.fragment,H),v=b(H),O(g.$$.fragment,H),x=b(H),O(o.$$.fragment,H),H.forEach(s),T=b(m),O(_.$$.fragment,m),u=b(m),w=d(m,"FIGCAPTION",{class:!0,"data-svelte-h":!0}),P(w)!=="svelte-kxdp0i"&&(w.textContent=D),m.forEach(s),this.h()},h(){C(n,"class","radius examples svelte-1h4aq7v"),C(w,"class","caption"),C(a,"class","max-w svelte-1h4aq7v"),C(a,"role","group")},m(t,m){l(t,a,m),p(a,n),Q(i,n,null),p(n,v),Q(g,n,null),p(n,x),Q(o,n,null),p(a,T),Q(_,a,null),p(a,u),p(a,w),k=!0},p(t,[m]){const H=m&5?ce(S,[S[0],m&1&&{percent:t[0]},m&4&&de(t[2])]):{};i.$set(H);const L=m&5?ce(j,[j[0],m&1&&{percent:t[0]},m&4&&de(t[2])]):{};g.$set(L);const se=m&5?ce(G,[G[0],m&1&&{percent:t[0]},m&4&&de(t[2])]):{};o.$set(se);const te=m&2?ce(A,[de(t[1])]):{};!f&&m&1&&(f=!0,te.value=t[0],De(()=>f=!1)),_.$set(te)},i(t){k||(U(i.$$.fragment,t),U(g.$$.fragment,t),U(o.$$.fragment,t),U(_.$$.fragment,t),k=!0)},o(t){V(i.$$.fragment,t),V(g.$$.fragment,t),V(o.$$.fragment,t),V(_.$$.fragment,t),k=!1},d(t){t&&s(a),K(i),K(g),K(o),K(_)}}}function Fe(h,a,n){const i={thumbColor:"var(--slate-blue-dim)",showNumber:!0,numSize:"var(--step--1)",step:"1",numColor:"var(--color-caption)"};let v=85;const g={use_decimal:!1,use_DPR:!1,fillSpace:!0,seeking:!0,bgColor:"none"};function x(o){v=o,n(0,v)}return[v,i,g,x]}class qe extends be{constructor(a){super(),we(this,a,Fe,Be,$e,{})}}function Ne(h){let a,n="<span>Gif Scrubber</span>",i,v,g=`An inline video player with custom controls. I made this component in the process of updating my website to have a
	more flexible way to handle media and avoid the headache of trying to optimize <em>real</em> gifs.`,x,o,T,_,f,u,w=`To keep it minimal and mobile-friendly, I stuck an always-visible playback <code data-type="html">button</code> on the
	corner and use a couple of pointer events to manage timeline scrubbing.`,D,k,S,I,j,W,G,z,A,y,B,t,m="svg",H,L,se="canvas",te,ae,ye="several",ge,J,he,ve,ne,X,re,Y,Ce=`I used a factor of 2×DPR (<em>i.e.</em> the last one) to make it <em>super</em> crisp: <em>super</em>
	unnecessary! It <em>was</em> slightly sharper and didn&#39;t have a noticeable impact on performance, so I went with it.`,le,ie,oe,Z,xe=`Never realized that it&#39;d be nearly impossible to rely on a single video source (<em>using any codec less than two decades old</em>)
	without breaking compatibility in at least one major browser. Ended up writing a Python script to backfill every mp4 with WebM
	before building. Magic ffmpeg command:`,pe,F,ke=`<code class="svelte-syby6g"><span>ffmpeg</span> -i [input] -movflags +faststart -pix_fmt yuv420p -c:v libvpx-vp9 -threads 8 -crf 40 -g 32 -deadline good -an [output]</code>
`,fe,ee,He="Getting it to work consistently was a lot more involved and hacky than I hoped, but I'm pretty happy with how it turned out.",ue;return o=new Ae({}),X=new qe({}),{c(){a=c("h1"),a.innerHTML=n,i=$(),v=c("p"),v.innerHTML=g,x=$(),N(o.$$.fragment),T=$(),_=c("hr"),f=$(),u=c("p"),u.innerHTML=w,D=$(),k=c("p"),S=R(`It's set up so moving a distance across the container's width is proportional to seeking that fraction of the video's\r
	duration. Huge s/o to Red Blob Games for their in-depth article about `),I=c("a"),j=R("draggable objects"),W=R(", extremely helpful!"),G=$(),z=c("hr"),A=$(),y=c("p"),B=R("I originally planned on using an "),t=c("code"),t.textContent=m,H=R(` for the progress indicator, but scrapped it for a\r
	`),L=c("code"),L.textContent=se,te=R(" after "),ae=c("em"),ae.textContent=ye,ge=R(` failed attempts at fixing transform jank. To prevent\r
	pixelation on high-dpi screens, the base resolution is scaled up by the\r
	`),J=c("a"),he=R("device pixel ratio (DPR)"),ve=R(" before its area is brought back down with CSS."),ne=$(),N(X.$$.fragment),re=$(),Y=c("p"),Y.innerHTML=Ce,le=$(),ie=c("hr"),oe=$(),Z=c("p"),Z.innerHTML=xe,pe=$(),F=c("pre"),F.innerHTML=ke,fe=$(),ee=c("p"),ee.textContent=He,this.h()},l(e){a=d(e,"H1",{"data-svelte-h":!0}),P(a)!=="svelte-16mbdpp"&&(a.innerHTML=n),i=b(e),v=d(e,"P",{"data-svelte-h":!0}),P(v)!=="svelte-1gwt0bf"&&(v.innerHTML=g),x=b(e),O(o.$$.fragment,e),T=b(e),_=d(e,"HR",{}),f=b(e),u=d(e,"P",{"data-svelte-h":!0}),P(u)!=="svelte-3bkcyd"&&(u.innerHTML=w),D=b(e),k=d(e,"P",{});var r=q(k);S=M(r,`It's set up so moving a distance across the container's width is proportional to seeking that fraction of the video's\r
	duration. Huge s/o to Red Blob Games for their in-depth article about `),I=d(r,"A",{href:!0,target:!0});var Pe=q(I);j=M(Pe,"draggable objects"),Pe.forEach(s),W=M(r,", extremely helpful!"),r.forEach(s),G=b(e),z=d(e,"HR",{}),A=b(e),y=d(e,"P",{});var E=q(y);B=M(E,"I originally planned on using an "),t=d(E,"CODE",{"data-type":!0,"data-svelte-h":!0}),P(t)!=="svelte-mflvan"&&(t.textContent=m),H=M(E,` for the progress indicator, but scrapped it for a\r
	`),L=d(E,"CODE",{"data-type":!0,"data-svelte-h":!0}),P(L)!=="svelte-jhma2z"&&(L.textContent=se),te=M(E," after "),ae=d(E,"EM",{"data-svelte-h":!0}),P(ae)!=="svelte-znumgi"&&(ae.textContent=ye),ge=M(E,` failed attempts at fixing transform jank. To prevent\r
	pixelation on high-dpi screens, the base resolution is scaled up by the\r
	`),J=d(E,"A",{href:!0,target:!0});var Te=q(J);he=M(Te,"device pixel ratio (DPR)"),Te.forEach(s),ve=M(E," before its area is brought back down with CSS."),E.forEach(s),ne=b(e),O(X.$$.fragment,e),re=b(e),Y=d(e,"P",{"data-svelte-h":!0}),P(Y)!=="svelte-17vxdi"&&(Y.innerHTML=Ce),le=b(e),ie=d(e,"HR",{}),oe=b(e),Z=d(e,"P",{"data-svelte-h":!0}),P(Z)!=="svelte-1tzok2a"&&(Z.innerHTML=xe),pe=b(e),F=d(e,"PRE",{class:!0,"data-svelte-h":!0}),P(F)!=="svelte-165br3l"&&(F.innerHTML=ke),fe=b(e),ee=d(e,"P",{"data-svelte-h":!0}),P(ee)!=="svelte-1z0us8i"&&(ee.textContent=He),this.h()},h(){C(I,"href",Oe),C(I,"target",Re),C(t,"data-type","html"),C(L,"data-type","html"),C(J,"href",Qe),C(J,"target",Re),C(F,"class","codeblock overflowscrollbar svelte-syby6g")},m(e,r){l(e,a,r),l(e,i,r),l(e,v,r),l(e,x,r),Q(o,e,r),l(e,T,r),l(e,_,r),l(e,f,r),l(e,u,r),l(e,D,r),l(e,k,r),p(k,S),p(k,I),p(I,j),p(k,W),l(e,G,r),l(e,z,r),l(e,A,r),l(e,y,r),p(y,B),p(y,t),p(y,H),p(y,L),p(y,te),p(y,ae),p(y,ge),p(y,J),p(J,he),p(y,ve),l(e,ne,r),Q(X,e,r),l(e,re,r),l(e,Y,r),l(e,le,r),l(e,ie,r),l(e,oe,r),l(e,Z,r),l(e,pe,r),l(e,F,r),l(e,fe,r),l(e,ee,r),ue=!0},p:Ee,i(e){ue||(U(o.$$.fragment,e),U(X.$$.fragment,e),ue=!0)},o(e){V(o.$$.fragment,e),V(X.$$.fragment,e),ue=!1},d(e){e&&(s(a),s(i),s(v),s(x),s(T),s(_),s(f),s(u),s(D),s(k),s(G),s(z),s(A),s(y),s(ne),s(re),s(Y),s(le),s(ie),s(oe),s(Z),s(pe),s(F),s(fe),s(ee)),K(o,e),K(X,e)}}}const Re="_blank",Oe="https://www.redblobgames.com/making-of/draggable/",Qe="https://cloudinary.com/glossary/device-pixel-ratio";class Xe extends be{constructor(a){super(),we(this,a,null,Ne,$e,{})}}export{Xe as component};
