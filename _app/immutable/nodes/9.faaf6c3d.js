import{s as ie,J as K,f as d,a as C,g as v,h as X,c as x,d as n,F as P,j as B,i as m,u as M,l as S,m as H,v as de}from"../chunks/scheduler.897fc3d6.js";import{S as le,i as oe,b,d as R,m as T,a as F,t as L,e as A}from"../chunks/index.f7b4bdff.js";import{g as Q,a as E}from"../chunks/spread.8a54911c.js";import{I as Y}from"../chunks/Img.216dd13c.js";import{G as he}from"../chunks/Gif.a4ed1882.js";import{S as ve}from"../chunks/SliderGallery.cce1ec81.js";function Ce(l){let e;return{c(){e=S("rasterized")},l(t){e=H(t,"rasterized")},m(t,r){m(t,e,r)},d(t){t&&n(e)}}}function xe(l){let e;return{c(){e=S("ray traced")},l(t){e=H(t,"ray traced")},m(t,r){m(t,e,r)},d(t){t&&n(e)}}}function we(l){let e,t,r,c,o,h,g,k="Utah teapot exported by the rasterizer (smooth shading, no shadows) and ray tracer (specularity, implicit lighting).",a;const _=[l[0]];let I={$$slots:{caption:[Ce]},$$scope:{ctx:l}};for(let p=0;p<_.length;p+=1)I=K(I,_[p]);r=new Y({props:I});const w=[l[1]];let q={$$slots:{caption:[xe]},$$scope:{ctx:l}};for(let p=0;p<w.length;p+=1)q=K(q,w[p]);return o=new Y({props:q}),{c(){e=d("figure"),t=d("div"),b(r.$$.fragment),c=C(),b(o.$$.fragment),h=C(),g=d("figcaption"),g.textContent=k,this.h()},l(p){e=v(p,"FIGURE",{class:!0,role:!0});var u=X(e);t=v(u,"DIV",{class:!0});var G=X(t);R(r.$$.fragment,G),c=x(G),R(o.$$.fragment,G),G.forEach(n),h=x(u),g=v(u,"FIGCAPTION",{class:!0,"data-svelte-h":!0}),P(g)!=="svelte-1wppobn"&&(g.textContent=k),u.forEach(n),this.h()},h(){B(t,"class","radius gap svelte-wlqmes"),B(g,"class","caption"),B(e,"class","max-w"),B(e,"role","group")},m(p,u){m(p,e,u),M(e,t),T(r,t,null),M(t,c),T(o,t,null),M(e,h),M(e,g),a=!0},p(p,[u]){const G=u&1?Q(_,[E(p[0])]):{};u&4&&(G.$$scope={dirty:u,ctx:p}),r.$set(G);const j=u&2?Q(w,[E(p[1])]):{};u&4&&(j.$$scope={dirty:u,ctx:p}),o.$set(j)},i(p){a||(F(r.$$.fragment,p),F(o.$$.fragment,p),a=!0)},o(p){L(r.$$.fragment,p),L(o.$$.fragment,p),a=!1},d(p){p&&n(e),A(r),A(o)}}}function Ie(l){return[{src:"/media/projects/MiscGraphics/static_renders/teapot_raster.avif",alt:"rasterized teapot",from:{x:0,y:5,s:1.2},to:{x:0,y:5,s:1.15}},{src:"/media/projects/MiscGraphics/static_renders/teapot_ray.avif",alt:"ray traced teapot",from:{x:0,y:5,s:1.2},to:{x:0,y:5,s:1.15}}]}class Ge extends le{constructor(e){super(),oe(this,e,Ie,we,ie,{})}}function ke(l){let e;return{c(){e=S("Crystals")},l(t){e=H(t,"Crystals")},m(t,r){m(t,e,r)},d(t){t&&n(e)}}}function Me(l){let e;return{c(){e=S("Example using the masking tool")},l(t){e=H(t,"Example using the masking tool")},m(t,r){m(t,e,r)},d(t){t&&n(e)}}}function ze(l){let e,t,r,c;const o=[l[0],l[1]];let h={$$slots:{caption:[ke]},$$scope:{ctx:l}};for(let a=0;a<o.length;a+=1)h=K(h,o[a]);e=new he({props:h});const g=[l[0],l[2],{autoplay:!1}];let k={$$slots:{caption:[Me]},$$scope:{ctx:l}};for(let a=0;a<g.length;a+=1)k=K(k,g[a]);return r=new he({props:k}),{c(){b(e.$$.fragment),t=C(),b(r.$$.fragment)},l(a){R(e.$$.fragment,a),t=x(a),R(r.$$.fragment,a)},m(a,_){T(e,a,_),m(a,t,_),T(r,a,_),c=!0},p(a,_){const I=_&3?Q(o,[_&1&&E(a[0]),_&2&&E(a[1])]):{};_&8&&(I.$$scope={dirty:_,ctx:a}),e.$set(I);const w=_&5?Q(g,[_&1&&E(a[0]),_&4&&E(a[2]),g[2]]):{};_&8&&(w.$$scope={dirty:_,ctx:a}),r.$set(w)},i(a){c||(F(e.$$.fragment,a),F(r.$$.fragment,a),c=!0)},o(a){L(e.$$.fragment,a),L(r.$$.fragment,a),c=!1},d(a){a&&n(t),A(e,a),A(r,a)}}}function ye(l){let e,t;return e=new ve({props:{$$slots:{default:[ze]},$$scope:{ctx:l}}}),{c(){b(e.$$.fragment)},l(r){R(e.$$.fragment,r)},m(r,c){T(e,r,c),t=!0},p(r,[c]){const o={};c&8&&(o.$$scope={dirty:c,ctx:r}),e.$set(o)},i(r){t||(F(e.$$.fragment,r),t=!0)},o(r){L(e.$$.fragment,r),t=!1},d(r){A(e,r)}}}function Ee(l){return[{height:"min(240px, 24vh)",width:"auto",controlsBg:"#0006"},{src:"/media/projects/MiscGraphics/seam_carve/crystal_carve.mp4"},{src:"/media/projects/MiscGraphics/seam_carve/child_mask.mp4"}]}class Se extends le{constructor(e){super(),oe(this,e,Ee,ye,ie,{})}}function He(l){let e,t,r="original",c;return{c(){e=S("moss ("),t=d("em"),t.textContent=r,c=S(")")},l(o){e=H(o,"moss ("),t=v(o,"EM",{"data-svelte-h":!0}),P(t)!=="svelte-1ki1pil"&&(t.textContent=r),c=H(o,")")},m(o,h){m(o,e,h),m(o,t,h),m(o,c,h)},p:de,d(o){o&&(n(e),n(t),n(c))}}}function je(l){let e;return{c(){e=S("horizontal sort")},l(t){e=H(t,"horizontal sort")},m(t,r){m(t,e,r)},d(t){t&&n(e)}}}function Pe(l){let e;return{c(){e=S("vertical sort")},l(t){e=H(t,"vertical sort")},m(t,r){m(t,e,r)},d(t){t&&n(e)}}}function be(l){let e,t,r,c,o,h,g,k,a,_='Pixel sorting effect on a picture I took of some frosted moss<span class="smile">☻</span>',I;const w=[l[0],l[1]];let q={$$slots:{caption:[He]},$$scope:{ctx:l}};for(let i=0;i<w.length;i+=1)q=K(q,w[i]);r=new Y({props:q});const p=[l[0],l[2]];let u={$$slots:{caption:[je]},$$scope:{ctx:l}};for(let i=0;i<p.length;i+=1)u=K(u,p[i]);o=new Y({props:u});const G=[l[0],l[3]];let j={$$slots:{caption:[Pe]},$$scope:{ctx:l}};for(let i=0;i<G.length;i+=1)j=K(j,G[i]);return g=new Y({props:j}),{c(){e=d("figure"),t=d("div"),b(r.$$.fragment),c=C(),b(o.$$.fragment),h=C(),b(g.$$.fragment),k=C(),a=d("figcaption"),a.innerHTML=_,this.h()},l(i){e=v(i,"FIGURE",{class:!0,role:!0});var $=X(e);t=v($,"DIV",{class:!0});var y=X(t);R(r.$$.fragment,y),c=x(y),R(o.$$.fragment,y),h=x(y),R(g.$$.fragment,y),y.forEach(n),k=x($),a=v($,"FIGCAPTION",{class:!0,"data-svelte-h":!0}),P(a)!=="svelte-a26xxu"&&(a.innerHTML=_),$.forEach(n),this.h()},h(){B(t,"class","radius"),B(a,"class","caption"),B(e,"class","max-w svelte-1fa03ej"),B(e,"role","group")},m(i,$){m(i,e,$),M(e,t),T(r,t,null),M(t,c),T(o,t,null),M(t,h),T(g,t,null),M(e,k),M(e,a),I=!0},p(i,[$]){const y=$&3?Q(w,[$&1&&E(i[0]),$&2&&E(i[1])]):{};$&16&&(y.$$scope={dirty:$,ctx:i}),r.$set(y);const N=$&5?Q(p,[$&1&&E(i[0]),$&4&&E(i[2])]):{};$&16&&(N.$$scope={dirty:$,ctx:i}),o.$set(N);const z=$&9?Q(G,[$&1&&E(i[0]),$&8&&E(i[3])]):{};$&16&&(z.$$scope={dirty:$,ctx:i}),g.$set(z)},i(i){I||(F(r.$$.fragment,i),F(o.$$.fragment,i),F(g.$$.fragment,i),I=!0)},o(i){L(r.$$.fragment,i),L(o.$$.fragment,i),L(g.$$.fragment,i),I=!1},d(i){i&&n(e),A(r),A(o),A(g)}}}function Re(l){return[{from:{x:0,y:0,s:2.2},to:{x:0,y:0,s:2.4}},{src:"/media/projects/MiscGraphics/pixel_sort/moss.avif",alt:"Original picture of moss"},{src:"/media/projects/MiscGraphics/pixel_sort/moss_h.avif",alt:"After horizontal pixel sort"},{src:"/media/projects/MiscGraphics/pixel_sort/moss_v.avif",alt:"After vertical pixel sort"}]}class Te extends le{constructor(e){super(),oe(this,e,Re,be,ie,{})}}function Fe(l){let e,t="Misc Graphics",r,c,o=`Here are some random projects I didn't really know what to do with but wanted to keep. Most of them were\r
	assignments I turned in for some graphics-related courses.`,h,g,k,a,_="Software Renderers",I,w,q=`Static renderers made for an <em>Intro to Graphics</em> course; they read NFF scene descriptions, *get processed by the
	pipeline*, and output as ppm. They&#39;re poorly optimized and far from real-time, but I still think they&#39;re neat.
	C++, Eigen.h`,p,u,G,j,i,$,y="Seam Carving",N,z,me,O,fe,pe,W,$e="Intro to Graphics",ce,Z,U,ee,te,se,D,ge="Pixel sorting",re,V,ue=`I thought this effect was cool and made a little CLI tool to play around with. I added some parameters for tweaking\r
	threshold behavior and sort direction. C++, CImg.h`,ae,J,ne;return u=new Ge({}),U=new Se({}),J=new Te({}),{c(){e=d("h1"),e.textContent=t,r=C(),c=d("p"),c.textContent=o,h=C(),g=d("hr"),k=C(),a=d("h2"),a.textContent=_,I=C(),w=d("p"),w.innerHTML=q,p=C(),b(u.$$.fragment),G=C(),j=d("hr"),i=C(),$=d("h2"),$.textContent=y,N=C(),z=d("p"),me=S("This is my implementation of the content-aware "),O=d("a"),fe=S("image resizing"),pe=S(` algorithm for the\r
	same\r
	`),W=d("em"),W.textContent=$e,ce=S(` course. I applied a LoG filter for emphasizing edges and used RGB→luma as a heuristic\r
	for evaluating "pixel energy". I also added a masking tool for finer-grained control. C++, CImg.h`),Z=C(),b(U.$$.fragment),ee=C(),te=d("hr"),se=C(),D=d("h2"),D.textContent=ge,re=C(),V=d("p"),V.textContent=ue,ae=C(),b(J.$$.fragment),this.h()},l(s){e=v(s,"H1",{"data-svelte-h":!0}),P(e)!=="svelte-13z4q5l"&&(e.textContent=t),r=x(s),c=v(s,"P",{"data-svelte-h":!0}),P(c)!=="svelte-lsk64h"&&(c.textContent=o),h=x(s),g=v(s,"HR",{}),k=x(s),a=v(s,"H2",{"data-svelte-h":!0}),P(a)!=="svelte-dgbl7r"&&(a.textContent=_),I=x(s),w=v(s,"P",{"data-svelte-h":!0}),P(w)!=="svelte-136sdik"&&(w.innerHTML=q),p=x(s),R(u.$$.fragment,s),G=x(s),j=v(s,"HR",{}),i=x(s),$=v(s,"H2",{"data-svelte-h":!0}),P($)!=="svelte-m9z83o"&&($.textContent=y),N=x(s),z=v(s,"P",{});var f=X(z);me=H(f,"This is my implementation of the content-aware "),O=v(f,"A",{href:!0,target:!0});var _e=X(O);fe=H(_e,"image resizing"),_e.forEach(n),pe=H(f,` algorithm for the\r
	same\r
	`),W=v(f,"EM",{"data-svelte-h":!0}),P(W)!=="svelte-15k3n4a"&&(W.textContent=$e),ce=H(f,` course. I applied a LoG filter for emphasizing edges and used RGB→luma as a heuristic\r
	for evaluating "pixel energy". I also added a masking tool for finer-grained control. C++, CImg.h`),f.forEach(n),Z=x(s),R(U.$$.fragment,s),ee=x(s),te=v(s,"HR",{}),se=x(s),D=v(s,"H2",{"data-svelte-h":!0}),P(D)!=="svelte-1ed955m"&&(D.textContent=ge),re=x(s),V=v(s,"P",{"data-svelte-h":!0}),P(V)!=="svelte-fostpo"&&(V.textContent=ue),ae=x(s),R(J.$$.fragment,s),this.h()},h(){B(O,"href",Le),B(O,"target",Ae)},m(s,f){m(s,e,f),m(s,r,f),m(s,c,f),m(s,h,f),m(s,g,f),m(s,k,f),m(s,a,f),m(s,I,f),m(s,w,f),m(s,p,f),T(u,s,f),m(s,G,f),m(s,j,f),m(s,i,f),m(s,$,f),m(s,N,f),m(s,z,f),M(z,me),M(z,O),M(O,fe),M(z,pe),M(z,W),M(z,ce),m(s,Z,f),T(U,s,f),m(s,ee,f),m(s,te,f),m(s,se,f),m(s,D,f),m(s,re,f),m(s,V,f),m(s,ae,f),T(J,s,f),ne=!0},p:de,i(s){ne||(F(u.$$.fragment,s),F(U.$$.fragment,s),F(J.$$.fragment,s),ne=!0)},o(s){L(u.$$.fragment,s),L(U.$$.fragment,s),L(J.$$.fragment,s),ne=!1},d(s){s&&(n(e),n(r),n(c),n(h),n(g),n(k),n(a),n(I),n(w),n(p),n(G),n(j),n(i),n($),n(N),n(z),n(Z),n(ee),n(te),n(se),n(D),n(re),n(V),n(ae)),A(u,s),A(U,s),A(J,s)}}}const Le="https://en.wikipedia.org/wiki/Seam_carving",Ae="_blank";class Ve extends le{constructor(e){super(),oe(this,e,null,Fe,ie,{})}}export{Ve as component};
