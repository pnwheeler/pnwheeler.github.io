import{s as re,I as Y,f as d,a as x,g as v,h as B,c as k,d as a,G as z,j as C,i as c,u as I,l as E,m as L,k as Ie,v as Re,p as ze,U as Ee,o as Le}from"../chunks/scheduler.1df3c48e.js";import{S as ae,i as ne,b as P,d as S,m as F,a as A,t as V,e as D,j as Pe}from"../chunks/index.1225a4fa.js";import{g as W,a as O}from"../chunks/spread.8a54911c.js";import{I as se}from"../chunks/Img.82c38c5a.js";import{G as be}from"../chunks/Gif.734e575b.js";/* empty css                                                            */import{R as Se}from"../chunks/RangeSlider.d833f6af.js";function Fe(f){let e;return{c(){e=E("Rasterized teapot")},l(s){e=L(s,"Rasterized teapot")},m(s,r){c(s,e,r)},d(s){s&&a(e)}}}function Ae(f){let e;return{c(){e=E("Ray traced teapot")},l(s){e=L(s,"Ray traced teapot")},m(s,r){c(s,e,r)},d(s){s&&a(e)}}}function Ve(f){let e,s,r,p,i,w,u,j="Utah teapot scene as exported by the different renderers.",h;const H=[f[0]];let y={$$slots:{caption:[Fe]},$$scope:{ctx:f}};for(let m=0;m<H.length;m+=1)y=Y(y,H[m]);r=new se({props:y});const $=[f[1]];let T={$$slots:{caption:[Ae]},$$scope:{ctx:f}};for(let m=0;m<$.length;m+=1)T=Y(T,$[m]);return i=new se({props:T}),{c(){e=d("figure"),s=d("div"),P(r.$$.fragment),p=x(),P(i.$$.fragment),w=x(),u=d("figcaption"),u.textContent=j,this.h()},l(m){e=v(m,"FIGURE",{class:!0,role:!0});var _=B(e);s=v(_,"DIV",{class:!0});var M=B(s);S(r.$$.fragment,M),p=k(M),S(i.$$.fragment,M),M.forEach(a),w=k(_),u=v(_,"FIGCAPTION",{class:!0,"data-svelte-h":!0}),z(u)!=="svelte-f7xzcn"&&(u.textContent=j),_.forEach(a),this.h()},h(){C(s,"class","radius svelte-wlqmes"),C(u,"class","caption"),C(e,"class","max-w"),C(e,"role","group")},m(m,_){c(m,e,_),I(e,s),F(r,s,null),I(s,p),F(i,s,null),I(e,w),I(e,u),h=!0},p(m,[_]){const M=_&1?W(H,[O(m[0])]):{};_&4&&(M.$$scope={dirty:_,ctx:m}),r.$set(M);const R=_&2?W($,[O(m[1])]):{};_&4&&(R.$$scope={dirty:_,ctx:m}),i.$set(R)},i(m){h||(A(r.$$.fragment,m),A(i.$$.fragment,m),h=!0)},o(m){V(r.$$.fragment,m),V(i.$$.fragment,m),h=!1},d(m){m&&a(e),D(r),D(i)}}}function De(f){return[{src:"/media/projects/MiscGraphics/static_renders/teapot_raster.avif",alt:"rasterized teapot",to:{x:0,y:5,s:1.2},from:{x:0,y:5,s:1.15}},{src:"/media/projects/MiscGraphics/static_renders/teapot_ray.avif",alt:"ray traced teapot",to:{x:0,y:5,s:1.2},from:{x:0,y:5,s:1.15}}]}class Be extends ae{constructor(e){super(),ne(this,e,De,Ve,re,{})}}function Oe(f){let e,s,r,p,i,w,u,j,h,H="Wikimedia Commons";return{c(){e=E(`Visualizing output: red seam marked for removal.\r
				`),s=d("span"),r=d("a"),p=E("Photo"),i=E(` by\r
				DAVID ILIFF, `),w=d("a"),u=E("CC BY 2.5"),j=E(`, via\r
				`),h=d("em"),h.textContent=H,this.h()},l(y){e=L(y,`Visualizing output: red seam marked for removal.\r
				`),s=v(y,"SPAN",{class:!0});var $=B(s);r=v($,"A",{href:!0,target:!0});var T=B(r);p=L(T,"Photo"),T.forEach(a),i=L($,` by\r
				DAVID ILIFF, `),w=v($,"A",{href:!0,target:!0});var m=B(w);u=L(m,"CC BY 2.5"),m.forEach(a),j=L($,`, via\r
				`),h=v($,"EM",{"data-svelte-h":!0}),z(h)!=="svelte-18tcd74"&&(h.textContent=H),$.forEach(a),this.h()},h(){C(r,"href",Ne),C(r,"target",je),C(w,"href","https://creativecommons.org/licenses/by/2.5"),C(w,"target",je),C(s,"class","source svelte-1ah7gal")},m(y,$){c(y,e,$),c(y,s,$),I(s,r),I(r,p),I(s,i),I(s,w),I(w,u),I(s,j),I(s,h)},p:Re,d(y){y&&(a(e),a(s))}}}function qe(f){let e,s,r;return s=new be({props:{src:"/media/projects/MiscGraphics/seam_carve/panorama.mp4",radius_type:"default",cap_center:!1,$$slots:{caption:[Oe]},$$scope:{ctx:f}}}),{c(){e=d("div"),P(s.$$.fragment),this.h()},l(p){e=v(p,"DIV",{class:!0,style:!0});var i=B(e);S(s.$$.fragment,i),i.forEach(a),this.h()},h(){C(e,"class","max-w"),Ie(e,"--w","500px")},m(p,i){c(p,e,i),F(s,e,null),r=!0},p(p,[i]){const w={};i&8&&(w.$$scope={dirty:i,ctx:p}),s.$set(w)},i(p){r||(A(s.$$.fragment,p),r=!0)},o(p){V(s.$$.fragment,p),r=!1},d(p){p&&a(e),D(s)}}}const Ne="https://commons.wikimedia.org/wiki/File:Melbourne_Docklands_-_Yarras_Edge_-_marina_panorama.jpg",je="_blank";function Ue(f){return[]}class Ye extends ae{constructor(e){super(),ne(this,e,Ue,qe,re,{})}}function We(f){let e;return{c(){e=E("original image")},l(s){e=L(s,"original image")},m(s,r){c(s,e,r)},d(s){s&&a(e)}}}function Je(f){let e;return{c(){e=E("horizontal sort")},l(s){e=L(s,"horizontal sort")},m(s,r){c(s,e,r)},d(s){s&&a(e)}}}function Ke(f){let e;return{c(){e=E("vertical sort")},l(s){e=L(s,"vertical sort")},m(s,r){c(s,e,r)},d(s){s&&a(e)}}}function Qe(f){let e,s,r,p,i,w,u,j,h,H="Pixel sorting a picture I took of some frosty mossâ€”cool way to reinterpret depth.",y;const $=[f[0],f[1]];let T={$$slots:{caption:[We]},$$scope:{ctx:f}};for(let l=0;l<$.length;l+=1)T=Y(T,$[l]);r=new se({props:T});const m=[f[0],f[2]];let _={$$slots:{caption:[Je]},$$scope:{ctx:f}};for(let l=0;l<m.length;l+=1)_=Y(_,m[l]);i=new se({props:_});const M=[f[0],f[3]];let R={$$slots:{caption:[Ke]},$$scope:{ctx:f}};for(let l=0;l<M.length;l+=1)R=Y(R,M[l]);return u=new se({props:R}),{c(){e=d("figure"),s=d("div"),P(r.$$.fragment),p=x(),P(i.$$.fragment),w=x(),P(u.$$.fragment),j=x(),h=d("figcaption"),h.textContent=H,this.h()},l(l){e=v(l,"FIGURE",{class:!0,role:!0});var g=B(e);s=v(g,"DIV",{class:!0});var n=B(s);S(r.$$.fragment,n),p=k(n),S(i.$$.fragment,n),w=k(n),S(u.$$.fragment,n),n.forEach(a),j=k(g),h=v(g,"FIGCAPTION",{class:!0,"data-svelte-h":!0}),z(h)!=="svelte-12m4a4r"&&(h.textContent=H),g.forEach(a),this.h()},h(){C(s,"class","radius"),C(h,"class","caption"),C(e,"class","max-w  svelte-x1uijb"),C(e,"role","group")},m(l,g){c(l,e,g),I(e,s),F(r,s,null),I(s,p),F(i,s,null),I(s,w),F(u,s,null),I(e,j),I(e,h),y=!0},p(l,[g]){const n=g&3?W($,[g&1&&O(l[0]),g&2&&O(l[1])]):{};g&16&&(n.$$scope={dirty:g,ctx:l}),r.$set(n);const b=g&5?W(m,[g&1&&O(l[0]),g&4&&O(l[2])]):{};g&16&&(b.$$scope={dirty:g,ctx:l}),i.$set(b);const G=g&9?W(M,[g&1&&O(l[0]),g&8&&O(l[3])]):{};g&16&&(G.$$scope={dirty:g,ctx:l}),u.$set(G)},i(l){y||(A(r.$$.fragment,l),A(i.$$.fragment,l),A(u.$$.fragment,l),y=!0)},o(l){V(r.$$.fragment,l),V(i.$$.fragment,l),V(u.$$.fragment,l),y=!1},d(l){l&&a(e),D(r),D(i),D(u)}}}function Xe(f){return[{from:{x:0,y:0,s:2.4},to:{x:0,y:0,s:2.6}},{src:"/media/projects/MiscGraphics/pixel_sort/moss.avif",alt:"Original picture of moss"},{src:"/media/projects/MiscGraphics/pixel_sort/moss_h.avif",alt:"After horizontal pixel sort"},{src:"/media/projects/MiscGraphics/pixel_sort/moss_v.avif",alt:"After vertical pixel sort"}]}class Ze extends ae{constructor(e){super(),ne(this,e,Xe,Qe,re,{})}}function et(f){let e,s,r,p,i,w,u,j,h,H,y='<span id="before">Before</span> and <span id="after" class="svelte-jjl9cv">after</span> running the script',$;const T=[f[1],{src:Te}];let m={};for(let n=0;n<T.length;n+=1)m=Y(m,T[n]);r=new be({props:m});const _=[f[1],{src:Ge},{outline_off:!0}];let M={};for(let n=0;n<_.length;n+=1)M=Y(M,_[n]);i=new be({props:M});const R=[f[2]];function l(n){f[3](n)}let g={};for(let n=0;n<R.length;n+=1)g=Y(g,R[n]);return f[0]!==void 0&&(g.value=f[0]),u=new Se({props:g}),ze.push(()=>Pe(u,"value",l)),{c(){e=d("figure"),s=d("div"),P(r.$$.fragment),p=x(),P(i.$$.fragment),w=x(),P(u.$$.fragment),h=x(),H=d("figcaption"),H.innerHTML=y,this.h()},l(n){e=v(n,"FIGURE",{class:!0,style:!0});var b=B(e);s=v(b,"DIV",{class:!0});var G=B(s);S(r.$$.fragment,G),p=k(G),S(i.$$.fragment,G),G.forEach(a),w=k(b),S(u.$$.fragment,b),h=k(b),H=v(b,"FIGCAPTION",{class:!0,"data-svelte-h":!0}),z(H)!=="svelte-racunt"&&(H.innerHTML=y),b.forEach(a),this.h()},h(){C(s,"class","before-after svelte-jjl9cv"),C(H,"class","caption svelte-jjl9cv"),C(e,"class","demo max-w svelte-jjl9cv"),Ie(e,"--percent",f[0]+"%")},m(n,b){c(n,e,b),I(e,s),F(r,s,null),I(s,p),F(i,s,null),I(e,w),F(u,e,null),I(e,h),I(e,H),$=!0},p(n,[b]){const G=b&2?W(T,[b&2&&O(n[1]),b&0&&{src:Te}]):{};r.$set(G);const ie=b&2?W(_,[b&2&&O(n[1]),b&0&&{src:Ge},_[2]]):{};i.$set(ie);const J=b&4?W(R,[O(n[2])]):{};!j&&b&1&&(j=!0,J.value=n[0],Ee(()=>j=!1)),u.$set(J),(!$||b&1)&&Ie(e,"--percent",n[0]+"%")},i(n){$||(A(r.$$.fragment,n),A(i.$$.fragment,n),A(u.$$.fragment,n),$=!0)},o(n){V(r.$$.fragment,n),V(i.$$.fragment,n),V(u.$$.fragment,n),$=!1},d(n){n&&a(e),D(r),D(i),D(u)}}}const Te="/media/projects/ImageStabilzation/church_after.mp4",Ge="/media/projects/ImageStabilzation/church_before.mp4";function tt(f,e,s){const r={controls:!1,pad:.5,background:"var(--grey-0)",inset_shadow:!0},p={padding:12,thumbWidth:14,thumbHeight:28,thumbRadius:1,trackHeight:6,bgColor:"var(--grey-0)",thumbColor:"var(--slate-blue-dim)",trackPre:"#5d5d5d",trackPost:"#5d5d5d",inset_shadow:!0,trackRound:!1};let i=50;function w(u){i=u,s(0,i)}return[i,r,p,w]}class st extends ae{constructor(e){super(),ne(this,e,tt,et,re,{})}}function rt(f){let e,s="<span>Misc Graphics</span>",r,p,i=`A couple of graphics related projects I wasn't sure how to organize but wanted to include. If nothing else, they give\r
	me a good excuse to add more pictures/demos :)`,w,u,j,h,H='<span class="svelte-5hioc4">Software Renderers</span>',y,$,T=`Ray tracer and rasterizer made for an <em>Intro to Graphics</em> course. They share a parser for reading
	<em>NFF</em> scene descriptions and exporting to ppm, and a bit of logic for matrix ops/geometry processing. They&#39;re
	poorly optimized and <em>very</em> minimal, but I still think they&#39;re neat. C++, Eigen.h`,m,_,M,R,l,g,n='<span class="svelte-5hioc4">Image stabilization</span>',b,G,ie=`I wrote this script to try automating the alignment of pictures I took without a tripod. The idea was to go through
	the sequence and, with respect to a set of feature coordinates (identified using <em>ORB descriptors</em> and a
	<em>BF matcher</em>), apply transforms to minimize the distance between them. OpenCV, Python`,J,K,le,oe,ce,N,xe='<span class="svelte-5hioc4">Seam Carving</span>',fe,q,de,Q,ve,we,te,ke="Intro to Graphics",Ce,me,X,pe,ue,ge,U,ye='<span class="svelte-5hioc4">Pixel sorting</span>',he,Z,He=`A little cli program I made to play around with an effect that sorts pixels (by color) along segmented intervals. I\r
	added a couple of parameters to modify threshold behavior and change the sort direction. C++, CImg.h`,$e,ee,_e;return _=new Be({}),K=new st({}),X=new Ye({}),ee=new Ze({}),{c(){e=d("h1"),e.innerHTML=s,r=x(),p=d("p"),p.textContent=i,w=x(),u=d("hr"),j=x(),h=d("h2"),h.innerHTML=H,y=x(),$=d("p"),$.innerHTML=T,m=x(),P(_.$$.fragment),M=x(),R=d("hr"),l=x(),g=d("h2"),g.innerHTML=n,b=x(),G=d("p"),G.innerHTML=ie,J=x(),P(K.$$.fragment),le=x(),oe=d("hr"),ce=x(),N=d("h2"),N.innerHTML=xe,fe=x(),q=d("p"),de=E("Implementation of the content-aware "),Q=d("a"),ve=E("seam carving"),we=E(` algorithm (also made for the\r
	`),te=d("em"),te.textContent=ke,Ce=E(` course). I preprocessed the images with a LoG filter and converted RGBâ†’relative luminance as\r
	the heuristic for pixel energy. I also went back and added a masking tool for better control over the output. C++, CImg.h`),me=x(),P(X.$$.fragment),pe=x(),ue=d("hr"),ge=x(),U=d("h2"),U.innerHTML=ye,he=x(),Z=d("p"),Z.textContent=He,$e=x(),P(ee.$$.fragment),this.h()},l(t){e=v(t,"H1",{"data-svelte-h":!0}),z(e)!=="svelte-2kftm8"&&(e.innerHTML=s),r=k(t),p=v(t,"P",{"data-svelte-h":!0}),z(p)!=="svelte-rr0tn8"&&(p.textContent=i),w=k(t),u=v(t,"HR",{}),j=k(t),h=v(t,"H2",{id:!0,class:!0,"data-svelte-h":!0}),z(h)!=="svelte-hxtweq"&&(h.innerHTML=H),y=k(t),$=v(t,"P",{"data-svelte-h":!0}),z($)!=="svelte-1gkjx6u"&&($.innerHTML=T),m=k(t),S(_.$$.fragment,t),M=k(t),R=v(t,"HR",{}),l=k(t),g=v(t,"H2",{id:!0,class:!0,"data-svelte-h":!0}),z(g)!=="svelte-ucva6w"&&(g.innerHTML=n),b=k(t),G=v(t,"P",{"data-svelte-h":!0}),z(G)!=="svelte-less1u"&&(G.innerHTML=ie),J=k(t),S(K.$$.fragment,t),le=k(t),oe=v(t,"HR",{}),ce=k(t),N=v(t,"H2",{id:!0,class:!0,"data-svelte-h":!0}),z(N)!=="svelte-18yucza"&&(N.innerHTML=xe),fe=k(t),q=v(t,"P",{});var o=B(q);de=L(o,"Implementation of the content-aware "),Q=v(o,"A",{href:!0,target:!0});var Me=B(Q);ve=L(Me,"seam carving"),Me.forEach(a),we=L(o,` algorithm (also made for the\r
	`),te=v(o,"EM",{"data-svelte-h":!0}),z(te)!=="svelte-15k3n4a"&&(te.textContent=ke),Ce=L(o,` course). I preprocessed the images with a LoG filter and converted RGBâ†’relative luminance as\r
	the heuristic for pixel energy. I also went back and added a masking tool for better control over the output. C++, CImg.h`),o.forEach(a),me=k(t),S(X.$$.fragment,t),pe=k(t),ue=v(t,"HR",{}),ge=k(t),U=v(t,"H2",{id:!0,class:!0,"data-svelte-h":!0}),z(U)!=="svelte-1cqj0sg"&&(U.innerHTML=ye),he=k(t),Z=v(t,"P",{"data-svelte-h":!0}),z(Z)!=="svelte-1ateljp"&&(Z.textContent=He),$e=k(t),S(ee.$$.fragment,t),this.h()},h(){C(h,"id","software-renderers"),C(h,"class","svelte-5hioc4"),C(g,"id","image-stabilization"),C(g,"class","svelte-5hioc4"),C(N,"id","seam-carving"),C(N,"class","svelte-5hioc4"),C(Q,"href",at),C(Q,"target",nt),C(U,"id","pixel-sorting"),C(U,"class","svelte-5hioc4")},m(t,o){c(t,e,o),c(t,r,o),c(t,p,o),c(t,w,o),c(t,u,o),c(t,j,o),c(t,h,o),c(t,y,o),c(t,$,o),c(t,m,o),F(_,t,o),c(t,M,o),c(t,R,o),c(t,l,o),c(t,g,o),c(t,b,o),c(t,G,o),c(t,J,o),F(K,t,o),c(t,le,o),c(t,oe,o),c(t,ce,o),c(t,N,o),c(t,fe,o),c(t,q,o),I(q,de),I(q,Q),I(Q,ve),I(q,we),I(q,te),I(q,Ce),c(t,me,o),F(X,t,o),c(t,pe,o),c(t,ue,o),c(t,ge,o),c(t,U,o),c(t,he,o),c(t,Z,o),c(t,$e,o),F(ee,t,o),_e=!0},p:Re,i(t){_e||(A(_.$$.fragment,t),A(K.$$.fragment,t),A(X.$$.fragment,t),A(ee.$$.fragment,t),_e=!0)},o(t){V(_.$$.fragment,t),V(K.$$.fragment,t),V(X.$$.fragment,t),V(ee.$$.fragment,t),_e=!1},d(t){t&&(a(e),a(r),a(p),a(w),a(u),a(j),a(h),a(y),a($),a(m),a(M),a(R),a(l),a(g),a(b),a(G),a(J),a(le),a(oe),a(ce),a(N),a(fe),a(q),a(me),a(pe),a(ue),a(ge),a(U),a(he),a(Z),a($e)),D(_,t),D(K,t),D(X,t),D(ee,t)}}}const at="https://en.wikipedia.org/wiki/Seam_carving",nt="_blank";function it(f){return Le(()=>{if(typeof window<"u"&&window.location.hash){const e=document.getElementById(window.location.hash.substring(1));e&&window.setTimeout(()=>e.scrollIntoView(),100)}}),[]}class gt extends ae{constructor(e){super(),ne(this,e,it,rt,re,{})}}export{gt as component};
