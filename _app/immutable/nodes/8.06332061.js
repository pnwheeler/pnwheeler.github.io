import{s as re,I as W,f as d,a as x,g as v,h as B,c as k,d as a,G as z,j as w,i as c,u as C,l as P,m as R,v as Le,p as ze,k as He,S as Pe,o as Re}from"../chunks/scheduler.bbcb3fe0.js";import{S as ae,i as ne,b as S,d as j,m as A,a as F,t as V,e as D,j as Se}from"../chunks/index.303e8b5d.js";import{g as Y,a as q}from"../chunks/spread.8a54911c.js";import{I as se}from"../chunks/Img.2f1b1815.js";import{G as Ce}from"../chunks/Gif.17143854.js";/* empty css                                                            */import{R as je}from"../chunks/RangeSlider.35207d22.js";function Ae(p){let e;return{c(){e=P("Rasterized teapot")},l(s){e=R(s,"Rasterized teapot")},m(s,r){c(s,e,r)},d(s){s&&a(e)}}}function Fe(p){let e;return{c(){e=P("Ray traced teapot")},l(s){e=R(s,"Ray traced teapot")},m(s,r){c(s,e,r)},d(s){s&&a(e)}}}function Ve(p){let e,s,r,f,i,b,u,T="Utah teapots exported by my versions of the different pipelines.",_;const M=[p[0]];let y={$$slots:{caption:[Ae]},$$scope:{ctx:p}};for(let m=0;m<M.length;m+=1)y=W(y,M[m]);r=new se({props:y});const $=[p[1]];let G={$$slots:{caption:[Fe]},$$scope:{ctx:p}};for(let m=0;m<$.length;m+=1)G=W(G,$[m]);return i=new se({props:G}),{c(){e=d("figure"),s=d("div"),S(r.$$.fragment),f=x(),S(i.$$.fragment),b=x(),u=d("figcaption"),u.textContent=T,this.h()},l(m){e=v(m,"FIGURE",{class:!0,role:!0});var h=B(e);s=v(h,"DIV",{class:!0});var H=B(s);j(r.$$.fragment,H),f=k(H),j(i.$$.fragment,H),H.forEach(a),b=k(h),u=v(h,"FIGCAPTION",{class:!0,"data-svelte-h":!0}),z(u)!=="svelte-ggxsoh"&&(u.textContent=T),h.forEach(a),this.h()},h(){w(s,"class","svelte-x2wci8"),w(u,"class","caption"),w(e,"class","max-w"),w(e,"role","group")},m(m,h){c(m,e,h),C(e,s),A(r,s,null),C(s,f),A(i,s,null),C(e,b),C(e,u),_=!0},p(m,[h]){const H=h&1?Y(M,[q(m[0])]):{};h&4&&(H.$$scope={dirty:h,ctx:m}),r.$set(H);const L=h&2?Y($,[q(m[1])]):{};h&4&&(L.$$scope={dirty:h,ctx:m}),i.$set(L)},i(m){_||(F(r.$$.fragment,m),F(i.$$.fragment,m),_=!0)},o(m){V(r.$$.fragment,m),V(i.$$.fragment,m),_=!1},d(m){m&&a(e),D(r),D(i)}}}function De(p){return[{src:"/media/projects/MiscGraphics/static_renders/teapot_raster.avif",alt:"rasterized teapot",radius_type:"combo left",to:{x:0,y:5,s:1.2},from:{x:0,y:5,s:1.15}},{src:"/media/projects/MiscGraphics/static_renders/teapot_ray.avif",alt:"ray traced teapot",radius_type:"combo right",to:{x:0,y:5,s:1.2},from:{x:0,y:5,s:1.15}}]}class Be extends ae{constructor(e){super(),ne(this,e,De,Ve,re,{})}}function qe(p){let e,s,r,f,i,b,u,T,_,M="Wikimedia Commons";return{c(){e=P(`Visualizing the seams: red marked for removal at each step.\r
				`),s=d("span"),r=d("a"),f=P("Photo"),i=P(` by\r
				DAVID ILIFF, `),b=d("a"),u=P("CC BY 2.5"),T=P(`, via\r
				`),_=d("em"),_.textContent=M,this.h()},l(y){e=R(y,`Visualizing the seams: red marked for removal at each step.\r
				`),s=v(y,"SPAN",{class:!0});var $=B(s);r=v($,"A",{href:!0,target:!0});var G=B(r);f=R(G,"Photo"),G.forEach(a),i=R($,` by\r
				DAVID ILIFF, `),b=v($,"A",{href:!0,target:!0});var m=B(b);u=R(m,"CC BY 2.5"),m.forEach(a),T=R($,`, via\r
				`),_=v($,"EM",{"data-svelte-h":!0}),z(_)!=="svelte-18tcd74"&&(_.textContent=M),$.forEach(a),this.h()},h(){w(r,"href",Ne),w(r,"target",Te),w(b,"href","https://creativecommons.org/licenses/by/2.5"),w(b,"target",Te),w(s,"class","source svelte-1omhu71")},m(y,$){c(y,e,$),c(y,s,$),C(s,r),C(r,f),C(s,i),C(s,b),C(b,u),C(s,T),C(s,_)},p:Le,d(y){y&&(a(e),a(s))}}}function Oe(p){let e,s,r;return s=new Ce({props:{src:"/media/projects/MiscGraphics/seam_carve/panorama.mp4",cap_center:!1,$$slots:{caption:[qe]},$$scope:{ctx:p}}}),{c(){e=d("div"),S(s.$$.fragment),this.h()},l(f){e=v(f,"DIV",{class:!0});var i=B(e);j(s.$$.fragment,i),i.forEach(a),this.h()},h(){w(e,"class","max-w svelte-1omhu71")},m(f,i){c(f,e,i),A(s,e,null),r=!0},p(f,[i]){const b={};i&8&&(b.$$scope={dirty:i,ctx:f}),s.$set(b)},i(f){r||(F(s.$$.fragment,f),r=!0)},o(f){V(s.$$.fragment,f),r=!1},d(f){f&&a(e),D(s)}}}const Ne="https://commons.wikimedia.org/wiki/File:Melbourne_Docklands_-_Yarras_Edge_-_marina_panorama.jpg",Te="_blank";function Ue(p){return[]}class We extends ae{constructor(e){super(),ne(this,e,Ue,Oe,re,{})}}function Ye(p){let e;return{c(){e=P("original")},l(s){e=R(s,"original")},m(s,r){c(s,e,r)},d(s){s&&a(e)}}}function Je(p){let e;return{c(){e=P("horizontal sort")},l(s){e=R(s,"horizontal sort")},m(s,r){c(s,e,r)},d(s){s&&a(e)}}}function Ke(p){let e;return{c(){e=P("vertical sort")},l(s){e=R(s,"vertical sort")},m(s,r){c(s,e,r)},d(s){s&&a(e)}}}function Qe(p){let e,s,r,f,i,b,u,T,_,M="Pixel sorting on a picture I took of some mossâ€”cool way to reinterpret depth.",y;const $=[p[0],p[1]];let G={$$slots:{caption:[Ye]},$$scope:{ctx:p}};for(let l=0;l<$.length;l+=1)G=W(G,$[l]);r=new se({props:G});const m=[p[0],p[2]];let h={$$slots:{caption:[Je]},$$scope:{ctx:p}};for(let l=0;l<m.length;l+=1)h=W(h,m[l]);i=new se({props:h});const H=[p[0],p[3]];let L={$$slots:{caption:[Ke]},$$scope:{ctx:p}};for(let l=0;l<H.length;l+=1)L=W(L,H[l]);return u=new se({props:L}),{c(){e=d("figure"),s=d("div"),S(r.$$.fragment),f=x(),S(i.$$.fragment),b=x(),S(u.$$.fragment),T=x(),_=d("figcaption"),_.textContent=M,this.h()},l(l){e=v(l,"FIGURE",{class:!0,role:!0});var g=B(e);s=v(g,"DIV",{class:!0});var n=B(s);j(r.$$.fragment,n),f=k(n),j(i.$$.fragment,n),b=k(n),j(u.$$.fragment,n),n.forEach(a),T=k(g),_=v(g,"FIGCAPTION",{class:!0,"data-svelte-h":!0}),z(_)!=="svelte-1qjs6a5"&&(_.textContent=M),g.forEach(a),this.h()},h(){w(s,"class","radius"),w(_,"class","caption"),w(e,"class","max-w  svelte-smqqrp"),w(e,"role","group")},m(l,g){c(l,e,g),C(e,s),A(r,s,null),C(s,f),A(i,s,null),C(s,b),A(u,s,null),C(e,T),C(e,_),y=!0},p(l,[g]){const n=g&3?Y($,[g&1&&q(l[0]),g&2&&q(l[1])]):{};g&16&&(n.$$scope={dirty:g,ctx:l}),r.$set(n);const I=g&5?Y(m,[g&1&&q(l[0]),g&4&&q(l[2])]):{};g&16&&(I.$$scope={dirty:g,ctx:l}),i.$set(I);const E=g&9?Y(H,[g&1&&q(l[0]),g&8&&q(l[3])]):{};g&16&&(E.$$scope={dirty:g,ctx:l}),u.$set(E)},i(l){y||(F(r.$$.fragment,l),F(i.$$.fragment,l),F(u.$$.fragment,l),y=!0)},o(l){V(r.$$.fragment,l),V(i.$$.fragment,l),V(u.$$.fragment,l),y=!1},d(l){l&&a(e),D(r),D(i),D(u)}}}function Xe(p){return[{from:{x:0,y:0,s:2.4},to:{x:0,y:0,s:2.5}},{src:"/media/projects/MiscGraphics/pixel_sort/moss.avif",alt:"Original picture of moss",radius_type:"combo left"},{src:"/media/projects/MiscGraphics/pixel_sort/moss_h.avif",alt:"After horizontal pixel sort",radius_type:"default"},{src:"/media/projects/MiscGraphics/pixel_sort/moss_v.avif",alt:"After vertical pixel sort",radius_type:"combo right"}]}class Ze extends ae{constructor(e){super(),ne(this,e,Xe,Qe,re,{})}}function et(p){let e,s,r,f,i,b,u,T,_,M,y='<span id="before">Before</span> and <span id="after" class="svelte-183odgy">after</span> running the script',$;const G=[p[1],{src:Ge}];let m={};for(let n=0;n<G.length;n+=1)m=W(m,G[n]);r=new Ce({props:m});const h=[p[1],{src:Ee},{outline_off:!0}];let H={};for(let n=0;n<h.length;n+=1)H=W(H,h[n]);i=new Ce({props:H});const L=[p[2]];function l(n){p[3](n)}let g={};for(let n=0;n<L.length;n+=1)g=W(g,L[n]);return p[0]!==void 0&&(g.value=p[0]),u=new je({props:g}),ze.push(()=>Se(u,"value",l)),{c(){e=d("figure"),s=d("div"),S(r.$$.fragment),f=x(),S(i.$$.fragment),b=x(),S(u.$$.fragment),_=x(),M=d("figcaption"),M.innerHTML=y,this.h()},l(n){e=v(n,"FIGURE",{class:!0,style:!0});var I=B(e);s=v(I,"DIV",{class:!0});var E=B(s);j(r.$$.fragment,E),f=k(E),j(i.$$.fragment,E),E.forEach(a),b=k(I),j(u.$$.fragment,I),_=k(I),M=v(I,"FIGCAPTION",{class:!0,"data-svelte-h":!0}),z(M)!=="svelte-racunt"&&(M.innerHTML=y),I.forEach(a),this.h()},h(){w(s,"class","before-after svelte-183odgy"),w(M,"class","caption svelte-183odgy"),w(e,"class","demo max-w svelte-183odgy"),He(e,"--percent",p[0]+"%")},m(n,I){c(n,e,I),C(e,s),A(r,s,null),C(s,f),A(i,s,null),C(e,b),A(u,e,null),C(e,_),C(e,M),$=!0},p(n,[I]){const E=I&2?Y(G,[I&2&&q(n[1]),I&0&&{src:Ge}]):{};r.$set(E);const ie=I&2?Y(h,[I&2&&q(n[1]),I&0&&{src:Ee},h[2]]):{};i.$set(ie);const J=I&4?Y(L,[q(n[2])]):{};!T&&I&1&&(T=!0,J.value=n[0],Pe(()=>T=!1)),u.$set(J),(!$||I&1)&&He(e,"--percent",n[0]+"%")},i(n){$||(F(r.$$.fragment,n),F(i.$$.fragment,n),F(u.$$.fragment,n),$=!0)},o(n){V(r.$$.fragment,n),V(i.$$.fragment,n),V(u.$$.fragment,n),$=!1},d(n){n&&a(e),D(r),D(i),D(u)}}}const Ge="/media/projects/ImageStabilzation/church_after.mp4",Ee="/media/projects/ImageStabilzation/church_before.mp4";function tt(p,e,s){const r={controls:!1,pad:.5,background:"var(--grey-0)",inset_shadow:!0},f={thumbColor:"var(--slate-blue-dim)",trackPre:"#5d5d5d",trackPost:"#5d5d5d"};let i=50;function b(u){i=u,s(0,i)}return[i,r,f,b]}class st extends ae{constructor(e){super(),ne(this,e,tt,et,re,{})}}function rt(p){let e,s="<span>Misc Graphics</span>",r,f,i=`A couple of graphics related projects I wasn't sure how to organize but wanted to include. Also, an excuse\r
	to add more pictures/demos :)`,b,u,T,_,M='<span class="svelte-pkb5h1">Software renderers</span>',y,$,G=`Ray tracer and rasterizer made for an <em>Intro to Graphics</em> course. They share a parser for reading
	<em>NFF</em> scene descriptions and exporting to ppm, and a bit of logic for matrix ops/geometry processing. They&#39;re
	poorly optimized and <em>very</em> minimal, but I still think they&#39;re neat. C++, Eigen.h`,m,h,H,L,l,g,n='<span class="svelte-pkb5h1">Image stabilization</span>',I,E,ie=`I wrote this script to try automating the alignment of pictures I took without a tripod. The idea was to go through
	the sequence and, with respect to a set of feature coordinates (identified using <em>ORB descriptors</em> and a
	<em>BF matcher</em>), apply transforms to minimize the distance between them. OpenCV, Python`,J,K,le,oe,ce,N,Ie='<span class="svelte-pkb5h1">Seam carving</span>',pe,O,de,Q,ve,be,te,xe="Intro to Graphics",we,me,X,fe,ue,ge,U,ke='<span class="svelte-pkb5h1">Pixel sort</span>',_e,Z,ye=`A cli program I made to play around with an effect that sorts pixels (by color) along segmented intervals. I\r
	added a couple of parameters to modify threshold behavior and change the sort direction. C++, CImg.h`,$e,ee,he;return h=new Be({}),K=new st({}),X=new We({}),ee=new Ze({}),{c(){e=d("h1"),e.innerHTML=s,r=x(),f=d("p"),f.textContent=i,b=x(),u=d("hr"),T=x(),_=d("h2"),_.innerHTML=M,y=x(),$=d("p"),$.innerHTML=G,m=x(),S(h.$$.fragment),H=x(),L=d("hr"),l=x(),g=d("h2"),g.innerHTML=n,I=x(),E=d("p"),E.innerHTML=ie,J=x(),S(K.$$.fragment),le=x(),oe=d("hr"),ce=x(),N=d("h2"),N.innerHTML=Ie,pe=x(),O=d("p"),de=P("My implementation of the content-aware/"),Q=d("a"),ve=P("seam carving"),be=P(` algorithm (also made for the\r
	`),te=d("em"),te.textContent=xe,we=P(` course). I preprocessed the images with a LoG filter and converted RGBâ†’relative luminance as\r
	the heuristic for pixel energy. Went back later and added a masking tool for better control over the output. C++, CImg.h`),me=x(),S(X.$$.fragment),fe=x(),ue=d("hr"),ge=x(),U=d("h2"),U.innerHTML=ke,_e=x(),Z=d("p"),Z.textContent=ye,$e=x(),S(ee.$$.fragment),this.h()},l(t){e=v(t,"H1",{"data-svelte-h":!0}),z(e)!=="svelte-2kftm8"&&(e.innerHTML=s),r=k(t),f=v(t,"P",{"data-svelte-h":!0}),z(f)!=="svelte-6nmcmw"&&(f.textContent=i),b=k(t),u=v(t,"HR",{}),T=k(t),_=v(t,"H2",{id:!0,class:!0,"data-svelte-h":!0}),z(_)!=="svelte-v95j1u"&&(_.innerHTML=M),y=k(t),$=v(t,"P",{"data-svelte-h":!0}),z($)!=="svelte-1gkjx6u"&&($.innerHTML=G),m=k(t),j(h.$$.fragment,t),H=k(t),L=v(t,"HR",{}),l=k(t),g=v(t,"H2",{id:!0,class:!0,"data-svelte-h":!0}),z(g)!=="svelte-ucva6w"&&(g.innerHTML=n),I=k(t),E=v(t,"P",{"data-svelte-h":!0}),z(E)!=="svelte-less1u"&&(E.innerHTML=ie),J=k(t),j(K.$$.fragment,t),le=k(t),oe=v(t,"HR",{}),ce=k(t),N=v(t,"H2",{id:!0,class:!0,"data-svelte-h":!0}),z(N)!=="svelte-cddpjq"&&(N.innerHTML=Ie),pe=k(t),O=v(t,"P",{});var o=B(O);de=R(o,"My implementation of the content-aware/"),Q=v(o,"A",{href:!0,target:!0});var Me=B(Q);ve=R(Me,"seam carving"),Me.forEach(a),be=R(o,` algorithm (also made for the\r
	`),te=v(o,"EM",{"data-svelte-h":!0}),z(te)!=="svelte-15k3n4a"&&(te.textContent=xe),we=R(o,` course). I preprocessed the images with a LoG filter and converted RGBâ†’relative luminance as\r
	the heuristic for pixel energy. Went back later and added a masking tool for better control over the output. C++, CImg.h`),o.forEach(a),me=k(t),j(X.$$.fragment,t),fe=k(t),ue=v(t,"HR",{}),ge=k(t),U=v(t,"H2",{id:!0,class:!0,"data-svelte-h":!0}),z(U)!=="svelte-wsue7q"&&(U.innerHTML=ke),_e=k(t),Z=v(t,"P",{"data-svelte-h":!0}),z(Z)!=="svelte-134acrn"&&(Z.textContent=ye),$e=k(t),j(ee.$$.fragment,t),this.h()},h(){w(_,"id","software-renderers"),w(_,"class","svelte-pkb5h1"),w(g,"id","image-stabilization"),w(g,"class","svelte-pkb5h1"),w(N,"id","seam-carving"),w(N,"class","svelte-pkb5h1"),w(Q,"href",at),w(Q,"target",nt),w(U,"id","pixel-sorting"),w(U,"class","svelte-pkb5h1")},m(t,o){c(t,e,o),c(t,r,o),c(t,f,o),c(t,b,o),c(t,u,o),c(t,T,o),c(t,_,o),c(t,y,o),c(t,$,o),c(t,m,o),A(h,t,o),c(t,H,o),c(t,L,o),c(t,l,o),c(t,g,o),c(t,I,o),c(t,E,o),c(t,J,o),A(K,t,o),c(t,le,o),c(t,oe,o),c(t,ce,o),c(t,N,o),c(t,pe,o),c(t,O,o),C(O,de),C(O,Q),C(Q,ve),C(O,be),C(O,te),C(O,we),c(t,me,o),A(X,t,o),c(t,fe,o),c(t,ue,o),c(t,ge,o),c(t,U,o),c(t,_e,o),c(t,Z,o),c(t,$e,o),A(ee,t,o),he=!0},p:Le,i(t){he||(F(h.$$.fragment,t),F(K.$$.fragment,t),F(X.$$.fragment,t),F(ee.$$.fragment,t),he=!0)},o(t){V(h.$$.fragment,t),V(K.$$.fragment,t),V(X.$$.fragment,t),V(ee.$$.fragment,t),he=!1},d(t){t&&(a(e),a(r),a(f),a(b),a(u),a(T),a(_),a(y),a($),a(m),a(H),a(L),a(l),a(g),a(I),a(E),a(J),a(le),a(oe),a(ce),a(N),a(pe),a(O),a(me),a(fe),a(ue),a(ge),a(U),a(_e),a(Z),a($e)),D(h,t),D(K,t),D(X,t),D(ee,t)}}}const at="https://en.wikipedia.org/wiki/Seam_carving",nt="_blank";function it(p){return Re(()=>{if(typeof window<"u"&&window.location.hash){const e=document.getElementById(window.location.hash.substring(1));e&&window.setTimeout(()=>e.scrollIntoView(),100)}}),[]}class gt extends ae{constructor(e){super(),ne(this,e,it,rt,re,{})}}export{gt as component};
