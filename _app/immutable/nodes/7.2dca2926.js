import{s as Ee,f as i,a as f,g as o,h as D,c as d,d as t,G as k,j as y,i as n,u as m,l as H,m as I,K as ke,p as We,S as Xe,v as Ye}from"../chunks/scheduler.8d84c197.js";import{S as je,i as ze,b as F,d as B,m as O,a as N,t as Q,e as U,j as Ze}from"../chunks/index.5e028736.js";import{G as Ke,R as Ge}from"../chunks/Gif.cb2d118f.js";import{g as xe,a as Ce}from"../chunks/spread.8a54911c.js";import{R as et}from"../chunks/RangeSlider.00a7ad4c.js";function tt(_){let a;return{c(){a=H("Blender donut")},l(l){a=I(l,"Blender donut")},m(l,p){n(l,a,p)},d(l){l&&t(a)}}}function at(_){let a;return{c(){a=H("Quick ttk on boss")},l(l){a=I(l,"Quick ttk on boss")},m(l,p){n(l,a,p)},d(l){l&&t(a)}}}function st(_){let a,l,p,b,v,x,u,M=`Demo gifs: Tutorial Donut and gamer clip from my best 
		run of <a href="https://store.steampowered.com/app/1676130/Deadlink/" target="_blank">deadlink</a>.`,$;return p=new Ke({props:{src:"/media/projects/GifScrubber/blender_donut.mp4",height:"min(240px, 24vh)",radius_type:"combo left",$$slots:{caption:[tt]},$$scope:{ctx:_}}}),v=new Ke({props:{src:"/media/projects/GifScrubber/deadlink.mp4",height:"min(240px, 24vh)",t:"#t=1",autoplay:!1,controlsBg:"#0006",radius_type:"combo right",$$slots:{caption:[at]},$$scope:{ctx:_}}}),{c(){a=i("figure"),l=i("div"),F(p.$$.fragment),b=f(),F(v.$$.fragment),x=f(),u=i("figcaption"),u.innerHTML=M,this.h()},l(h){a=o(h,"FIGURE",{class:!0,role:!0});var g=D(a);l=o(g,"DIV",{class:!0});var w=D(l);B(p.$$.fragment,w),b=d(w),B(v.$$.fragment,w),w.forEach(t),x=d(g),u=o(g,"FIGCAPTION",{class:!0,"data-svelte-h":!0}),k(u)!=="svelte-1s14123"&&(u.innerHTML=M),g.forEach(t),this.h()},h(){y(l,"class","svelte-o0m8eb"),y(u,"class","caption"),y(a,"class","max-w svelte-o0m8eb"),y(a,"role","group")},m(h,g){n(h,a,g),m(a,l),O(p,l,null),m(l,b),O(v,l,null),m(a,x),m(a,u),$=!0},p(h,[g]){const w={};g&1&&(w.$$scope={dirty:g,ctx:h}),p.$set(w);const G={};g&1&&(G.$$scope={dirty:g,ctx:h}),v.$set(G)},i(h){$||(N(p.$$.fragment,h),N(v.$$.fragment,h),$=!0)},o(h){Q(p.$$.fragment,h),Q(v.$$.fragment,h),$=!1},d(h){h&&t(a),U(p),U(v)}}}class rt extends je{constructor(a){super(),ze(this,a,null,st,Ee,{})}}function nt(_){let a,l,p,b,v,x,u,M,$,h,g,w,G=`Simulating DPR=3 to compare canvas quality at increasing render scales. From left: default (<em>20px</em>), by 1×DPR
		(<em>60px</em>), and by 2×DPR (<em>120px</em>).`,P;const V=[{size:20},{percent:_[0]},_[2]];let j={};for(let s=0;s<V.length;s+=1)j=ke(j,V[s]);p=new Ge({props:j});const T=[{size:60},{percent:_[0]},_[2]];let J={};for(let s=0;s<T.length;s+=1)J=ke(J,T[s]);v=new Ge({props:J});const R=[{size:120},{percent:_[0]},_[2]];let K={};for(let s=0;s<R.length;s+=1)K=ke(K,R[s]);u=new Ge({props:K});const W=[_[1]];function le(s){_[3](s)}let E={};for(let s=0;s<W.length;s+=1)E=ke(E,W[s]);return _[0]!==void 0&&(E.value=_[0]),$=new et({props:E}),We.push(()=>Ze($,"value",le)),{c(){a=i("figure"),l=i("div"),F(p.$$.fragment),b=f(),F(v.$$.fragment),x=f(),F(u.$$.fragment),M=f(),F($.$$.fragment),g=f(),w=i("figcaption"),w.innerHTML=G,this.h()},l(s){a=o(s,"FIGURE",{class:!0,role:!0});var c=D(a);l=o(c,"DIV",{class:!0});var L=D(l);B(p.$$.fragment,L),b=d(L),B(v.$$.fragment,L),x=d(L),B(u.$$.fragment,L),L.forEach(t),M=d(c),B($.$$.fragment,c),g=d(c),w=o(c,"FIGCAPTION",{class:!0,"data-svelte-h":!0}),k(w)!=="svelte-zhrkhc"&&(w.innerHTML=G),c.forEach(t),this.h()},h(){y(l,"class","radius examples svelte-15ez60t"),y(w,"class","caption"),y(a,"class","max-w svelte-15ez60t"),y(a,"role","group")},m(s,c){n(s,a,c),m(a,l),O(p,l,null),m(l,b),O(v,l,null),m(l,x),O(u,l,null),m(a,M),O($,a,null),m(a,g),m(a,w),P=!0},p(s,[c]){const L=c&5?xe(V,[V[0],c&1&&{percent:s[0]},c&4&&Ce(s[2])]):{};p.$set(L);const ie=c&5?xe(T,[T[0],c&1&&{percent:s[0]},c&4&&Ce(s[2])]):{};v.$set(ie);const C=c&5?xe(R,[R[0],c&1&&{percent:s[0]},c&4&&Ce(s[2])]):{};u.$set(C);const oe=c&2?xe(W,[Ce(s[1])]):{};!h&&c&1&&(h=!0,oe.value=s[0],Xe(()=>h=!1)),$.$set(oe)},i(s){P||(N(p.$$.fragment,s),N(v.$$.fragment,s),N(u.$$.fragment,s),N($.$$.fragment,s),P=!0)},o(s){Q(p.$$.fragment,s),Q(v.$$.fragment,s),Q(u.$$.fragment,s),Q($.$$.fragment,s),P=!1},d(s){s&&t(a),U(p),U(v),U(u),U($)}}}function lt(_,a,l){const p={thumbColor:"var(--slate-blue-dim)",showNumber:!0,numSize:"var(--step--1)",step:"1",numColor:"var(--color-caption)"};let b=25;const v={use_decimal:!1,use_DPR:!1,fillSpace:!0,seeking:!0,bgColor:"none"};function x(u){b=u,l(0,b)}return[b,p,v,x]}class it extends je{constructor(a){super(),ze(this,a,lt,nt,Ee,{})}}function ot(_){let a,l="<span>Gif Scrubber</span>",p,b,v=`An inline video player I made to use as a drop-in alternative to gif. Along with avoiding all the conversion-related\r
	headaches, the component makes media handling more flexible and has the added benefit of thirty years’ worth of codec\r
	improvements.`,x,u,M,$,h,g,w="Media Controls",G,P,V=`To make cross-browser behavior consistent, it uses custom controls: I stuck an always-visible button on the corner for\r
	toggling play state and, when the container is grabbed, pointer events kick in to manage timeline scrubbing.`,j,T,J,R,K,W,le,E,s,c,L="Progress indicator",ie,C,oe,X,Se="svg",Te,Y,Ae="canvas",He,Z,Ie,Pe,pe,ee,ce,te,qe=`Just to try, I scaled the dimensions up by another factor of two (<em>i.e.</em> the rightmost canvas) to make it
	<em>super</em>
	crisp—<em>super</em>
	unnecessary! It <em>was</em> slightly sharper and there <em>wasn&#39;t</em> any noticeable impact on performance (only a single
	canvas is active at a time), so I went with it.`,ue,me,fe,ae,Fe="Format Considerations",de,se,Be=`While testing, I realized that replacing <code data-type="ext">.gif</code> with the
	<code data-type="html">video</code> element comes with a couple of nontrivial (to me, at least) drawbacks:`,he,z,Oe="<li>you can’t <em>press-and-hold</em> to save on mobile</li> <li>they won&#39;t be visible in reader mode</li> <li>playback isn&#39;t guaranteed—it depends on a support matrix of browser features and hardware capabilities</li>",ge,re,Ne=`To make a long story short, I took care of the last point in a pre-build step by writing a Python script to traverse
	my media directory and generate <code data-type="ext">.webm</code> fallbacks. My magic ffmpeg command looks like this:`,ve,S,Qe=`<code class="svelte-1kecyt1"><span>ffmpeg</span> -i [input].mp4 -movflags +faststart -pix_fmt yuv420p -c:v libvpx-vp9 -threads 8 -crf 40 -g 32 -deadline good -an [output].webm</code>
`,_e,be,$e,A,Re,ne,Me,Le,we;return u=new rt({}),ee=new it({}),{c(){a=i("h1"),a.innerHTML=l,p=f(),b=i("p"),b.textContent=v,x=f(),F(u.$$.fragment),M=f(),$=i("hr"),h=f(),g=i("h3"),g.textContent=w,G=f(),P=i("p"),P.textContent=V,j=f(),T=i("p"),J=H(`It’s set up so moving a distance across the figure’s width is proportional to seeking that fraction of the video's\r
	duration. Huge s/o to Red Blob Games for their in-depth article about\r
	`),R=i("a"),K=H("draggable objects"),W=H("—extremely helpful reference!"),le=f(),E=i("hr"),s=f(),c=i("h3"),c.textContent=L,ie=f(),C=i("p"),oe=H("The original "),X=i("code"),X.textContent=Se,Te=H(` was plagued by rotation jank, so I wound up porting the graphic to\r
	`),Y=i("code"),Y.textContent=Ae,He=H(`. That cleared up the transform issues, but introduced a new one that made it look\r
	blocky and aliased on high dpi screens. Thankfully, the browser provides a fix courtesy the\r
	`),Z=i("a"),Ie=H("device pixel ratio (DPR)"),Pe=H(", which can be queried and used as a resolution multiplier."),pe=f(),F(ee.$$.fragment),ce=f(),te=i("p"),te.innerHTML=qe,ue=f(),me=i("hr"),fe=f(),ae=i("h3"),ae.textContent=Fe,de=f(),se=i("p"),se.innerHTML=Be,he=f(),z=i("ol"),z.innerHTML=Oe,ge=f(),re=i("p"),re.innerHTML=Ne,ve=f(),S=i("pre"),S.innerHTML=Qe,_e=f(),be=i("hr"),$e=f(),A=i("p"),Re=H("Getting everything working nicely across browsers and devices was a lot more complicated than I expected (e.g. "),ne=i("a"),Me=H("safari media fragment hack"),Le=H(", positioning quirks, etc.), but I’m happy with how it turned out and learned a lot in the process."),this.h()},l(e){a=o(e,"H1",{"data-svelte-h":!0}),k(a)!=="svelte-16mbdpp"&&(a.innerHTML=l),p=d(e),b=o(e,"P",{"data-svelte-h":!0}),k(b)!=="svelte-1hi1fbc"&&(b.textContent=v),x=d(e),B(u.$$.fragment,e),M=d(e),$=o(e,"HR",{}),h=d(e),g=o(e,"H3",{"data-svelte-h":!0}),k(g)!=="svelte-1jcj2iy"&&(g.textContent=w),G=d(e),P=o(e,"P",{"data-svelte-h":!0}),k(P)!=="svelte-11zytcr"&&(P.textContent=V),j=d(e),T=o(e,"P",{});var r=D(T);J=I(r,`It’s set up so moving a distance across the figure’s width is proportional to seeking that fraction of the video's\r
	duration. Huge s/o to Red Blob Games for their in-depth article about\r
	`),R=o(r,"A",{href:!0,target:!0});var Ue=D(R);K=I(Ue,"draggable objects"),Ue.forEach(t),W=I(r,"—extremely helpful reference!"),r.forEach(t),le=d(e),E=o(e,"HR",{}),s=d(e),c=o(e,"H3",{"data-svelte-h":!0}),k(c)!=="svelte-lxue3i"&&(c.textContent=L),ie=d(e),C=o(e,"P",{});var q=D(C);oe=I(q,"The original "),X=o(q,"CODE",{"data-type":!0,"data-svelte-h":!0}),k(X)!=="svelte-mflvan"&&(X.textContent=Se),Te=I(q,` was plagued by rotation jank, so I wound up porting the graphic to\r
	`),Y=o(q,"CODE",{"data-type":!0,"data-svelte-h":!0}),k(Y)!=="svelte-jhma2z"&&(Y.textContent=Ae),He=I(q,`. That cleared up the transform issues, but introduced a new one that made it look\r
	blocky and aliased on high dpi screens. Thankfully, the browser provides a fix courtesy the\r
	`),Z=o(q,"A",{href:!0,target:!0});var Ve=D(Z);Ie=I(Ve,"device pixel ratio (DPR)"),Ve.forEach(t),Pe=I(q,", which can be queried and used as a resolution multiplier."),q.forEach(t),pe=d(e),B(ee.$$.fragment,e),ce=d(e),te=o(e,"P",{"data-svelte-h":!0}),k(te)!=="svelte-14gkn7f"&&(te.innerHTML=qe),ue=d(e),me=o(e,"HR",{}),fe=d(e),ae=o(e,"H3",{"data-svelte-h":!0}),k(ae)!=="svelte-zo8yxa"&&(ae.textContent=Fe),de=d(e),se=o(e,"P",{"data-svelte-h":!0}),k(se)!=="svelte-pmho79"&&(se.innerHTML=Be),he=d(e),z=o(e,"OL",{role:!0,"data-svelte-h":!0}),k(z)!=="svelte-7379ec"&&(z.innerHTML=Oe),ge=d(e),re=o(e,"P",{"data-svelte-h":!0}),k(re)!=="svelte-park15"&&(re.innerHTML=Ne),ve=d(e),S=o(e,"PRE",{class:!0,"data-svelte-h":!0}),k(S)!=="svelte-1t6jss4"&&(S.innerHTML=Qe),_e=d(e),be=o(e,"HR",{}),$e=d(e),A=o(e,"P",{});var ye=D(A);Re=I(ye,"Getting everything working nicely across browsers and devices was a lot more complicated than I expected (e.g. "),ne=o(ye,"A",{href:!0,target:!0});var Je=D(ne);Me=I(Je,"safari media fragment hack"),Je.forEach(t),Le=I(ye,", positioning quirks, etc.), but I’m happy with how it turned out and learned a lot in the process."),ye.forEach(t),this.h()},h(){y(R,"href",pt),y(R,"target",De),y(X,"data-type","html"),y(Y,"data-type","html"),y(Z,"href",ct),y(Z,"target",De),y(z,"role","list"),y(S,"class","codeblock overflow-scrollbar svelte-1kecyt1"),y(ne,"href",ut),y(ne,"target",De)},m(e,r){n(e,a,r),n(e,p,r),n(e,b,r),n(e,x,r),O(u,e,r),n(e,M,r),n(e,$,r),n(e,h,r),n(e,g,r),n(e,G,r),n(e,P,r),n(e,j,r),n(e,T,r),m(T,J),m(T,R),m(R,K),m(T,W),n(e,le,r),n(e,E,r),n(e,s,r),n(e,c,r),n(e,ie,r),n(e,C,r),m(C,oe),m(C,X),m(C,Te),m(C,Y),m(C,He),m(C,Z),m(Z,Ie),m(C,Pe),n(e,pe,r),O(ee,e,r),n(e,ce,r),n(e,te,r),n(e,ue,r),n(e,me,r),n(e,fe,r),n(e,ae,r),n(e,de,r),n(e,se,r),n(e,he,r),n(e,z,r),n(e,ge,r),n(e,re,r),n(e,ve,r),n(e,S,r),n(e,_e,r),n(e,be,r),n(e,$e,r),n(e,A,r),m(A,Re),m(A,ne),m(ne,Me),m(A,Le),we=!0},p:Ye,i(e){we||(N(u.$$.fragment,e),N(ee.$$.fragment,e),we=!0)},o(e){Q(u.$$.fragment,e),Q(ee.$$.fragment,e),we=!1},d(e){e&&(t(a),t(p),t(b),t(x),t(M),t($),t(h),t(g),t(G),t(P),t(j),t(T),t(le),t(E),t(s),t(c),t(ie),t(C),t(pe),t(ce),t(te),t(ue),t(me),t(fe),t(ae),t(de),t(se),t(he),t(z),t(ge),t(re),t(ve),t(S),t(_e),t(be),t($e),t(A)),U(u,e),U(ee,e)}}}const De="_blank",pt="https://www.redblobgames.com/making-of/draggable/",ct="https://cloudinary.com/glossary/device-pixel-ratio",ut="https://muffinman.io/blog/hack-for-ios-safari-to-display-html-video-thumbnail/";class vt extends je{constructor(a){super(),ze(this,a,null,ot,Ee,{})}}export{vt as component};
